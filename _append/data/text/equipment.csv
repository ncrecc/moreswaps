Name,Description,Size,Script: On Execute,Gadget,Slots,NEED TOTAL?,Category,Colour,Upgrade,Weaken,Alternate Status Trigger,SFX,Uses?,Cast Backwards?,Single use?,Parallel Universe,Special?,Error Immune,Show Gold,Appears For Parts,Hide Reuseable,Witch Spell,Script: Before Combat,Script: After Combat,Script: Before Start Turn,Script: On Start Turn,Script: End Turn,Script: On any equipment use,Script: Before execute,Script: On Snap,Script: On Fury,Script: On any countdown reduce
Flicker,Inflict [vanish]1 vanish,1,if(getstatus(~ncr_vanishall~) < 1 && getstatus(VANISH) < 1 && getstatus(~ncr_vanishlegacy~) < 1) { inflict(~ncr_vanish~); inflict(~ncr_internalvanish~); var dovanish = new elements.Skill(~Vanishthing~); dovanish.execute(self|target); } else { self.textparticle(~No effect!~); } /*i thought matz' compartmentalization trick thing would've made this way less of a pain in the ass; but... ok it's still less of a pain in the ass than it would be if i had to copypaste the entire vanish handling code everywhere. thx matz --ncr*/,Delude,EVEN,,WEAPON,PINK,simplify,complicate,,_vanish,0,NO,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Illusion Spell,Deal [vanish]5 damage|Inflict [vanish]2 vanish,1,sfxdamage(target|5); attack(5|VANISH); if(getstatus(~ncr_vanishall~) < 1 && getstatus(VANISH) < 1 && getstatus(~ncr_vanishlegacy~) < 1) { inflict(~ncr_vanish~|2); inflict(~ncr_internalvanish~|2); var dovanish = new elements.Skill(~Vanishthing~); dovanish.execute(self|target); } else { self.textparticle(~No effect!~); },Strobe Light,REQUIRE2,,MAGIC,PINK,change_power,change_power,,_vanish,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Illusion Spell_upgraded,Deal [vanish]6 damage|Inflict [vanish]Vanish_ALL,1,sfxdamage(target|6); attack(6|VANISH); inflict(~ncr_vanishall~); inflict(~ncr_internalvanish~|999); if(getstatus(~ncr_vanishall~) > 0) { target.removestatus(~ncr_vanish~|ALL); } var dovanish = new elements.Skill(~Infvanishthing~); dovanish.execute(self|target);,Strobe Light,REQUIRE2,,MAGIC,PINK,,,,_vanish,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Illusion Spell_downgraded,Deal [sword]5 damage,1,sfxdamage(target|5); attack(5);,Strobe Light,REQUIRE2,,MAGIC,PINK,,,,_vanish,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Energy Ball,Deal [vanish]<d6> damage|Inflict [vanish]1 vanish,1,sfxdamage(target|d); attack(d| VANISH); if(getstatus(~ncr_vanishall~) < 1 && getstatus(VANISH) < 1 && getstatus(~ncr_vanishlegacy~) < 1) { inflict(~ncr_vanish~); inflict(~ncr_internalvanish~); var dovanish = new elements.Skill(~Vanishthing~); dovanish.execute(self|target); } else { self.textparticle(~No effect!~); },Strobe Light,EVEN,,MAGIC,PINK,change_power,change_power,,_vanish,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Energy Ball_upgraded,Deal [vanish]<d6> damage|Inflict [vanish]2 vanish,1,sfxdamage(target|d); attack(d| VANISH); if(getstatus(~ncr_vanishall~) < 1 && getstatus(VANISH) < 1 && getstatus(~ncr_vanishlegacy~) < 1) { inflict(~ncr_vanish~|2); inflict(~ncr_internalvanish~|2); var dovanish = new elements.Skill(~Vanishthing~); dovanish.execute(self|target); } else { self.textparticle(~No effect!~); },Strobe Light,EVEN,,MAGIC,PINK,,,,_vanish,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Energy Ball_downgraded,Deal [sword]<d6> damage,1,sfxdamage(target|d); attack(d);,Strobe Light,EVEN,,MAGIC,PINK,,,,_vanish,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Sleight of Hand,Do [sword]<d6> damage[;]|on 6[;] inflict [vanish]1 vanish,2,sfxdamage(target|d); attack(d); if(d == 6) { if(getstatus(~ncr_vanishall~) < 1 && getstatus(VANISH) < 1 && getstatus(~ncr_vanishlegacy~) < 1) { inflict(~ncr_vanish~); inflict(~ncr_internalvanish~); var dovanish = new elements.Skill(~Vanishthing~); dovanish.execute(self|target); sfx(~_vanish~|~~|0.2); } else { self.textparticle(~No effect!~); }  },Delude,NORMAL,,WEAPON,PURPLE,change_power,change_power,,_damage,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Sleight of Hand_upgraded,Do [sword]<d6> damage[;]|on 6[;] inflict [vanish]2 vanish,2,sfxdamage(target|d); attack(d); if(d == 6) { if(getstatus(~ncr_vanishall~) < 1 && getstatus(VANISH) < 1 && getstatus(~ncr_vanishlegacy~) < 1) { inflict(~ncr_vanish~|2); inflict(~ncr_internalvanish~|2); var dovanish = new elements.Skill(~Vanishthing~); dovanish.execute(self|target); sfx(~_vanish~|~~|0.2); } else { self.textparticle(~No effect!~); } },Delude,NORMAL,,WEAPON,PURPLE,,,,_damage,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Sleight of Hand_downgraded,Do [sword]<d6> damage,2,sfxdamage(target|d); attack(d);,Delude,NORMAL,,WEAPON,PURPLE,,,,_damage,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Sceptre,Deal [vanish]6 damage|Inflict [vanish]1 vanish,2,sfxdamage(target|6); attack(6| VANISH); if(getstatus(~ncr_vanishall~) < 1 && getstatus(VANISH) < 1 && getstatus(~ncr_vanishlegacy~) < 1) { inflict(~ncr_vanish~); inflict(~ncr_internalvanish~); var dovanish = new elements.Skill(~Vanishthing~); dovanish.execute(self|target); } else { self.textparticle(~No effect!~); },Hadoken,COUNTDOWN,8,WEAPON,PINK,change_power,change_power,,_vanish,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Sceptre_downgraded,Deal [vanish]3 damage|Inflict [vanish]1 vanish,2,sfxdamage(target|3); attack(3| VANISH); if(getstatus(~ncr_vanishall~) < 1 && getstatus(VANISH) < 1 && getstatus(~ncr_vanishlegacy~) < 1) { inflict(~ncr_vanish~); inflict(~ncr_internalvanish~); var dovanish = new elements.Skill(~Vanishthing~); dovanish.execute(self|target); } else { self.textparticle(~No effect!~); },Hadoken,COUNTDOWN,8,WEAPON,PINK,,,,_vanish,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Sceptre_upgraded,Deal [vanish]8 damage|Inflict [vanish]1 vanish,2,sfxdamage(target|8); attack(8| VANISH); if(getstatus(~ncr_vanishall~) < 1 && getstatus(VANISH) < 1 && getstatus(~ncr_vanishlegacy~) < 1) { inflict(~ncr_vanish~); inflict(~ncr_internalvanish~); var dovanish = new elements.Skill(~Vanishthing~); dovanish.execute(self|target); } else { self.textparticle(~No effect!~); },Hadoken,COUNTDOWN,8,WEAPON,PINK,,,,_vanish,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Wicker Sceptre,Deal [vanish]9 damage|Inflict [vanish]2 vanish,2,sfxdamage(target|9); attack(9| VANISH); if(getstatus(~ncr_vanishall~) < 1 && getstatus(VANISH) < 1 && getstatus(~ncr_vanishlegacy~) < 1) { inflict(~ncr_vanish~|2); inflict(~ncr_internalvanish~|2); var dovanish = new elements.Skill(~Vanishthing~); dovanish.execute(self|target); } else { self.textparticle(~No effect!~); },Hadoken,COUNTDOWN,12,WEAPON,PINK,threequartercountdown,change_power,,_vanish,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Wicker Sceptre_weakened,Deal [vanish]5 damage|Inflict [vanish]1 vanish,2,sfxdamage(target|5); attack(5| VANISH); if(getstatus(~ncr_vanishall~) < 1 && getstatus(VANISH) < 1 && getstatus(~ncr_vanishlegacy~) < 1) { inflict(~ncr_vanish~); inflict(~ncr_internalvanish~); var dovanish = new elements.Skill(~Vanishthing~); dovanish.execute(self|target); } else { self.textparticle(~No effect!~); },Hadoken,COUNTDOWN,9,WEAPON,PINK,,,,_vanish,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Wicker Sceptre_downgraded,Deal [vanish]5 damage|Inflict [vanish]1 vanish,2,sfxdamage(target|5); attack(5| VANISH); if(getstatus(~ncr_vanishall~) < 1 && getstatus(VANISH) < 1 && getstatus(~ncr_vanishlegacy~) < 1) { inflict(~ncr_vanish~); inflict(~ncr_internalvanish~); var dovanish = new elements.Skill(~Vanishthing~); dovanish.execute(self|target); } else { self.textparticle(~No effect!~); },Hadoken,COUNTDOWN,12,WEAPON,PINK,,,,_vanish,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Undying Flame,Burn all dice,2,inflict(FIRE|ALL);,Hellfire,COUNTDOWN,12,MAGIC,RED,halfcountdown,change_function,,_fire,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Undying Flame_downgraded,Inflict [vanish]1 vanish,2,if(getstatus(~ncr_vanishall~) < 1 && getstatus(VANISH) < 1 && getstatus(~ncr_vanishlegacy~) < 1) { inflict(~ncr_vanish~); inflict(~ncr_internalvanish~); var dovanish = new elements.Skill(~Vanishthing~); dovanish.execute(self|target); } else { self.textparticle(~No effect!~); },Hellfire,COUNTDOWN,12,MAGIC,RED,,,,_vanish,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Undying Flame_weakened,Inflict [vanish]1 vanish,2,if(getstatus(~ncr_vanishall~) < 1 && getstatus(VANISH) < 1 && getstatus(~ncr_vanishlegacy~) < 1) { inflict(~ncr_vanish~); inflict(~ncr_internalvanish~); var dovanish = new elements.Skill(~Vanishthing~); dovanish.execute(self|target); } else { self.textparticle(~No effect!~); },Hellfire,COUNTDOWN,6,MAGIC,RED,,,,_vanish,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Idiot's Ice,Freeze all dice,2,inflict(ICE|ALL);,Arctic Storm,COUNTDOWN,12,MAGIC,BRIGHTCYAN,halfcountdown,change_function,,_ice,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Idiot's Ice_downgraded,Inflict [vanish]1 vanish,2,if(getstatus(~ncr_vanishall~) < 1 && getstatus(VANISH) < 1 && getstatus(~ncr_vanishlegacy~) < 1) { inflict(~ncr_vanish~); inflict(~ncr_internalvanish~); var dovanish = new elements.Skill(~Vanishthing~); dovanish.execute(self|target); } else { self.textparticle(~No effect!~); },Arctic Storm,COUNTDOWN,12,MAGIC,BRIGHTCYAN,,,,_vanish,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Idiot's Ice_weakened,Inflict [vanish]1 vanish,2,if(getstatus(~ncr_vanishall~) < 1 && getstatus(VANISH) < 1 && getstatus(~ncr_vanishlegacy~) < 1) { inflict(~ncr_vanish~); inflict(~ncr_internalvanish~); var dovanish = new elements.Skill(~Vanishthing~); dovanish.execute(self|target); } else { self.textparticle(~No effect!~); },Arctic Storm,COUNTDOWN,6,MAGIC,BRIGHTCYAN,,,,_vanish,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Proton Pack,[vanish]<d6> dmg[;] +[vanish]2 vanish|[gray](once per battle),1,sfxdamage(target|d); attack(d|VANISH); if(getstatus(~ncr_vanishall~) < 1 && getstatus(VANISH) < 1 && getstatus(~ncr_vanishlegacy~) < 1) { inflict(~ncr_vanish~|2); inflict(~ncr_internalvanish~|2); var dovanish = new elements.Skill(~Vanishthing~); dovanish.execute(self|target); } else { self.textparticle(~No effect!~); },Hadoken,NORMAL|NORMAL,,WEAPON,PINK,change_power,complicate,,_vanish,0,NO,YES,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Proton Pack_upgraded,[vanish]<d6> dmg[;] +[vanish]4 vanish|[gray](once per battle),2,sfxdamage(target|d); attack(d|VANISH); if(getstatus(~ncr_vanishall~) < 1 && getstatus(VANISH) < 1 && getstatus(~ncr_vanishlegacy~) < 1) { inflict(~ncr_vanish~|4); inflict(~ncr_internalvanish~|4); var dovanish = new elements.Skill(~Vanishthing~); dovanish.execute(self|target); } else { self.textparticle(~No effect!~); },Hadoken,NORMAL|NORMAL|NORMAL|NORMAL,,WEAPON,PINK,,,,_vanish,0,NO,YES,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Ouija Board,[vanish]<timesused> dmg[;] inflict [vanish]1 vanish|Add +[vanish]1 dmg each use,2,sfxdamage(target|e.timesused + 1); attack(e.timesused + 1| VANISH); if(getstatus(~ncr_vanishall~) < 1 && getstatus(VANISH) < 1 && getstatus(~ncr_vanishlegacy~) < 1) { inflict(~ncr_vanish~); inflict(~ncr_internalvanish~); var dovanish = new elements.Skill(~Vanishthing~); dovanish.execute(self|target); } else { self.textparticle(~No effect!~); } bonus(1000); /*campfire. why is a girl scout carrying around a ouija board? i dunno. what do i look like; a child psychologist? -ncr*/,Hadoken,EVEN,,WEAPON,PINK,change_power,complicate,,_vanish,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Ouija Board_upgraded,[vanish]<timesused> dmg[;] inflict [vanish]2 vanish|Add +[vanish]1 dmg each use,2,sfxdamage(target|e.timesused + 1); attack(e.timesused + 1| VANISH); if(getstatus(~ncr_vanishall~) < 1 && getstatus(VANISH) < 1 && getstatus(~ncr_vanishlegacy~) < 1) { inflict(~ncr_vanish~|2); inflict(~ncr_internalvanish~|2); var dovanish = new elements.Skill(~Vanishthing~); dovanish.execute(self|target); } else { self.textparticle(~No effect!~); } bonus(1000);,Hadoken,EVEN,,WEAPON,PINK,,,,_vanish,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Light Show,Do [vanish]6 damage for|each [vanish]1 vanish on enemy,2,if(getstatus(~ncr_vanishall~) > 0 # getstatus(VANISH) > 0 # getstatus(~ncr_vanishlegacy~) > 0) { attack(999); } else { attack(getstatus(~ncr_vanish~) * 6 | VANISH); sfxdamage(target|getstatus(~ncr_vanish~) * 6); },Strobe Light,COUNTDOWN,4,WEAPON,PINK,change_power,change_power,,_vanish,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Light Show_upgraded,Do [vanish]7 damage for|each [vanish]1 vanish on enemy,2,if(getstatus(~ncr_vanishall~) > 0 # getstatus(VANISH) > 0 # getstatus(~ncr_vanishlegacy~) > 0) { attack(999); } else { attack(getstatus(~ncr_vanish~) * 7 | VANISH); sfxdamage(target|getstatus(~ncr_vanish~) * 7); },Strobe Light,COUNTDOWN,4,WEAPON,PINK,,,,_vanish,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Light Show_downgraded,Do [vanish]4 damage for|each [vanish]1 vanish on enemy,2,if(getstatus(~ncr_vanishall~) > 0 # getstatus(VANISH) > 0 # getstatus(~ncr_vanishlegacy~) > 0) { attack(999); } else { attack(getstatus(~ncr_vanish~) * 4 | VANISH); sfxdamage(target|getstatus(~ncr_vanish~) * 4); },Strobe Light,COUNTDOWN,4,WEAPON,PINK,,,,_vanish,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Shudder,Inflict [vanish]1 vanish[;]|return both dice,1,if(getstatus(~ncr_vanishall~) < 1 && getstatus(VANISH) < 1 && getstatus(~ncr_vanishlegacy~) < 1) { inflict(~ncr_vanish~); inflict(~ncr_internalvanish~); var dovanish = new elements.Skill(~Vanishthing~); dovanish.execute(self|target); } else { self.textparticle(~No effect!~); } givedice([d| d]);,Strobe Light,DOUBLES|DOUBLES,,WEAPON,PINK,change_power,change_power,,_vanish,0,NO,NO,YES,NO,NO,NO,NO,NO,1,,,,,,,,,,
Shudder_upgraded,Inflict [vanish]1 vanish[;]|return the dice,1,if(getstatus(~ncr_vanishall~) < 1 && getstatus(VANISH) < 1 && getstatus(~ncr_vanishlegacy~) < 1) { inflict(~ncr_vanish~); inflict(~ncr_internalvanish~); var dovanish = new elements.Skill(~Vanishthing~); dovanish.execute(self|target); } else { self.textparticle(~No effect!~); } givedice(d);,Strobe Light,EVEN,,WEAPON,PINK,,,,_vanish,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Shudder_downgraded,Inflict [vanish]1 vanish,1,if(getstatus(~ncr_vanishall~) < 1 && getstatus(VANISH) < 1 && getstatus(~ncr_vanishlegacy~) < 1) { inflict(~ncr_vanish~); inflict(~ncr_internalvanish~); var dovanish = new elements.Skill(~Vanishthing~); dovanish.execute(self|target); } else { self.textparticle(~No effect!~); },Strobe Light,DOUBLES|DOUBLES,,WEAPON,PINK,,,,_vanish,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Mirage,Inflict [vanish]Vanish_ALL[],2,inflict(~ncr_vanishall~); inflict(~ncr_internalvanish~|999); if(getstatus(~ncr_vanishall~) > 0) { target.removestatus(~ncr_vanish~|ALL); } var dovanish = new elements.Skill(~Infvanishthing~); dovanish.execute(self|target); bonus(1000);,Strobe Light,REQUIRE1|REQUIRE1,,MAGIC,PINK,change_power,change_power,,_vanish,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Mirage_upgraded,Inflict [vanish]Vanish_ALL[],2,inflict(~ncr_vanishall~); inflict(~ncr_internalvanish~|999); if(getstatus(~ncr_vanishall~) > 0) { target.removestatus(~ncr_vanish~|ALL); } var dovanish = new elements.Skill(~Infvanishthing~); dovanish.execute(self|target); bonus(1000);,Strobe Light,DOUBLES|DOUBLES,,MAGIC,PINK,,,,_vanish,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Mirage_downgraded,Inflict [vanish]Vanish_ALL[],2,inflict(~ncr_vanishall~); inflict(~ncr_internalvanish~|999); if(getstatus(~ncr_vanishall~) > 0) { target.removestatus(~ncr_vanish~|ALL); } var dovanish = new elements.Skill(~Infvanishthing~); dovanish.execute(self|target); bonus(1000);,Strobe Light,REQUIRE1|REQUIRE1|REQUIRE1|REQUIRE1,,MAGIC,PINK,,,,_vanish,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Hard Light,Do [vanish]<d6> damage[;]|+[vanish]3 if enemy has [vanish]vanish,2,if(getstatus(~ncr_vanish~) > 0 # getstatus(~ncr_vanishall~) > 0 # getstatus(~ncr_vanishlegacy~) > 0 # getstatus(VANISH) > 0) { attack((d + 3) | VANISH); sfxdamage(target|d+3); } else { attack((d) | VANISH); sfxdamage(target|d); },Strobe Light,NORMAL,,WEAPON,PINK,change_power,change_power,,_vanish,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Hard Light_upgraded,Do [vanish]<d6> damage[;]|x2 if enemy has [vanish]vanish,2,if(getstatus(~ncr_vanish~) > 0 # getstatus(~ncr_vanishall~) > 0 # getstatus(~ncr_vanishlegacy~) > 0 # getstatus(VANISH) > 0) { attack((d * 2) | VANISH); sfxdamage(target|d * 2); } else { attack((d) | VANISH); sfxdamage(target|d); },Strobe Light,NORMAL,,WEAPON,PINK,,,,_vanish,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Hard Light_downgraded,Do [vanish]<d6> damage[;]|+[vanish]3 if enemy has [vanish]vanish,2,if(getstatus(~ncr_vanish~) > 0 # getstatus(~ncr_vanishall~) > 0 # getstatus(~ncr_vanishlegacy~) > 0 # getstatus(VANISH) > 0) { attack((d + 3) | VANISH); sfxdamage(target|d+3); } else { attack((d) | VANISH); sfxdamage(target|d); },Strobe Light,MAX3,,WEAPON,PINK,,,,_vanish,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Blacklight,Do [vanish]2 damage[;]|inflict [vanish]1 vanish,1,sfxdamage(target|2); attack(2|VANISH); if(getstatus(~ncr_vanishall~) < 1 && getstatus(VANISH) < 1 && getstatus(~ncr_vanishlegacy~) < 1) { inflict(~ncr_vanish~); inflict(~ncr_internalvanish~); var dovanish = new elements.Skill(~Vanishthing~); dovanish.execute(self|target); } else { self.textparticle(~No effect!~); },Hadoken,COUNTDOWN,5,WEAPON,PINK,change_power,change_power,,_vanish,0,NO,NO,YES,NO,NO,NO,NO,NO,1,,,,,,,,,,
Blacklight_upgraded,Do [vanish]3 damage[;]|inflict [vanish]1 vanish,1,sfxdamage(target|3); attack(3|VANISH); if(getstatus(~ncr_vanishall~) < 1 && getstatus(VANISH) < 1 && getstatus(~ncr_vanishlegacy~) < 1) { inflict(~ncr_vanish~); inflict(~ncr_internalvanish~); var dovanish = new elements.Skill(~Vanishthing~); dovanish.execute(self|target); } else { self.textparticle(~No effect!~); },Hadoken,COUNTDOWN,5,WEAPON,PINK,,,,_vanish,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Blacklight_downgraded,Do [vanish]1 damage[;]|inflict [vanish]1 vanish,1,sfxdamage(target|1); attack(1|VANISH); if(getstatus(~ncr_vanishall~) < 1 && getstatus(VANISH) < 1 && getstatus(~ncr_vanishlegacy~) < 1) { inflict(~ncr_vanish~); inflict(~ncr_internalvanish~); var dovanish = new elements.Skill(~Vanishthing~); dovanish.execute(self|target); } else { self.textparticle(~No effect!~); },Hadoken,COUNTDOWN,5,WEAPON,PINK,,,,_vanish,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Ectoplasm,Do [vanish]<d6> damage[;]|on 4[;] inflict [vanish]1 vanish,2,sfxdamage(target|d); attack(d|VANISH); if(d == 4) { if(getstatus(~ncr_vanishall~) < 1 && getstatus(VANISH) < 1 && getstatus(~ncr_vanishlegacy~) < 1) { inflict(~ncr_vanish~); inflict(~ncr_internalvanish~); var dovanish = new elements.Skill(~Vanishthing~); dovanish.execute(self|target); } else { self.textparticle(~No effect!~); } },Hadoken,NORMAL,,WEAPON,PINK,change_power,complicate,,_vanish,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Ectoplasm_upgraded,Do [vanish]<d6> damage[;]|on even[;] inflict [vanish]1 vanish,2,sfxdamage(target|d); attack(d|VANISH); if(d % 2 == 0) { if(getstatus(~ncr_vanishall~) < 1 && getstatus(VANISH) < 1 && getstatus(~ncr_vanishlegacy~) < 1) { inflict(~ncr_vanish~); inflict(~ncr_internalvanish~); var dovanish = new elements.Skill(~Vanishthing~); dovanish.execute(self|target); } else { self.textparticle(~No effect!~); } },Hadoken,NORMAL,,WEAPON,PINK,,,,_vanish,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Spirit Sword,Do [vanish]<d6> dmg[;] +[vanish]2 vanish|(get [vanish]vanish[] each turn),1,sfxdamage(target|d); attack(d|VANISH);  if(getstatus(~ncr_vanishall~) < 1 && getstatus(VANISH) < 1 && getstatus(~ncr_vanishlegacy~) < 1) { inflict(~ncr_vanish~|2); inflict(~ncr_internalvanish~|2); var dovanish = new elements.Skill(~Vanishthing~); dovanish.execute(self|target); } else { self.textparticle(~No effect!~); },Hadoken,MAX5|MAX5,,WEAPON,PINK,change_power,complicate,,_vanish,0,NO,NO,YES,NO,NO,NO,NO,NO,1,,,,e.animate(~flashandshake~); if(getstatusself(~ncr_vanishall~) < 1 && getstatusself(VANISH) < 1 && getstatusself(~ncr_vanishlegacy~) < 1) { inflictself(~ncr_vanish~); inflictself(~ncr_internalvanish~); var dovanishself = new elements.Skill(~Vanishselfthing~); dovanishself.execute(self|target); },,,,,,
Spirit Sword_upgraded,Do [vanish]<d6> dmg[;] +[vanish]2 vanish|(get [vanish]vanish[] each turn),1,sfxdamage(target|d); attack(d|VANISH);  if(getstatus(~ncr_vanishall~) < 1 && getstatus(VANISH) < 1 && getstatus(~ncr_vanishlegacy~) < 1) { inflict(~ncr_vanish~|2); inflict(~ncr_internalvanish~|2); var dovanish = new elements.Skill(~Vanishthing~); dovanish.execute(self|target); } else { self.textparticle(~No effect!~); },Hadoken,NORMAL|NORMAL,,WEAPON,PINK,,,,_vanish,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,e.animate(~flashandshake~); if(getstatusself(~ncr_vanishall~) < 1 && getstatusself(VANISH) < 1 && getstatusself(~ncr_vanishlegacy~) < 1) { inflictself(~ncr_vanish~); inflictself(~ncr_internalvanish~); var dovanishself = new elements.Skill(~Vanishselfthing~); dovanishself.execute(self|target); },,,,,,
Shocking Horror,Do [sword]<d6> damage[;] inflict|[vanish]Vanish and [shock]Shock,1,sfxdamage(target|d); attack(d); if(getstatus(~ncr_vanishall~) < 1 && getstatus(VANISH) < 1 && getstatus(~ncr_vanishlegacy~) < 1) { inflict(~ncr_vanish~); inflict(~ncr_internalvanish~); var dovanish = new elements.Skill(~Vanishthing~); dovanish.execute(self|target); } else { self.textparticle(~No effect!~); } inflict(SHOCK| 1); sfx(~_vanish~|~~|0.2); sfx(~_shock~|~~|0.2);,Hadoken,MAX4,,WEAPON,PINK,change_power,change_power,,_damage,0,NO,NO,YES,NO,NO,NO,NO,NO,1,,,,,,,,,,
Shocking Horror_upgraded,Do [sword]<d6> damage[;] inflict|[vanish]Vanish and [shock]Shock,1,sfxdamage(target|d); attack(d); if(getstatus(~ncr_vanishall~) < 1 && getstatus(VANISH) < 1 && getstatus(~ncr_vanishlegacy~) < 1) { inflict(~ncr_vanish~); inflict(~ncr_internalvanish~); var dovanish = new elements.Skill(~Vanishthing~); dovanish.execute(self|target); } else { self.textparticle(~No effect!~); } inflict(SHOCK| 1); sfx(~_vanish~|~~|0.2); sfx(~_shock~|~~|0.2);,Hadoken,NORMAL,,WEAPON,PINK,,,,_damage,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Shocking Horror_downgraded,Do [sword]<d6> damage,1,sfxdamage(target|d); attack(d);,Hadoken,REQUIRE5,,WEAPON,PINK,,,,_damage,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Boo,In [jinx]6 turns[;]|do [vanish]20 damage|[80%][gray]''2SPOOKY4ME''[],2,/*this may very well be THE lamest fire-vanish swap but i find the notion of the enemy taking massive damage because you said 'boo' really funny for some reason - ncr*/ jinx(~Boo~|~take [vanish]%VAR% damage~|~Take [vanish]%VAR% damage~|~attack(%VAR%| VANISH); sfxdamage(null|%VAR%); sfx(\~_vanish\~|\~\~|0.2);~|target|self|6|20); sfx(~_thinghappens~);,Hadoken,COUNTDOWN,5,ITEM,PINK,change_power,change_power,,none,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Boo_upgraded,In [jinx]5 turns[;]|do [vanish]20 damage|[80%][gray]''2SPOOPY4ME''[],2,jinx(~Boo+~|~take [vanish]%VAR% damage~|~Take [vanish]%VAR% damage~|~attack(%VAR%| VANISH); sfxdamage(null|%VAR%); sfx(\~_vanish\~|\~\~|0.2);~|target|self|5|20); sfx(~_thinghappens~);,Hadoken,COUNTDOWN,5,ITEM,PINK,,,,none,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Boo_downgraded,In [jinx]7 turns[;]|do [vanish]20 damage|[80%][gray]''2SPOOKY4ME''[],2,jinx(~Boo-~|~take [vanish]%VAR% damage~|~Take [vanish]%VAR% damage~|~attack(%VAR%| VANISH); sfxdamage(null|%VAR%); sfx(\~_vanish\~|\~\~|0.2);~|target|self|7|20); sfx(~_thinghappens~);,Hadoken,COUNTDOWN,5,ITEM,PINK,,,,none,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Milky Potion,[vanish]8 dmg[;] inflict [vanish]Vanish_ALL[]|[gray](once per battle),2,sfxdamage(target|8); attack(8|VANISH); inflict(~ncr_vanishall~); inflict(~ncr_internalvanish~|999); if(getstatus(~ncr_vanishall~) > 0) { target.removestatus(~ncr_vanish~|ALL); } var dovanish = new elements.Skill(~Infvanishthing~); dovanish.execute(self|target); /*potions in nethack that summon ghosts are called 'milky potions'. so vanish is associated with summoning ghosts AND repelling ghosts. i don't get it. what the heck ncr -ncr*/,Delude,COUNTDOWN,8,ITEM,PINK,threequartercountdown,change_power,,_vanish,0,NO,YES,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Milky Potion_downgraded,Do [vanish]4 damage|[gray](once per battle),2,sfxdamage(target|4); attack(4|VANISH);,Delude,COUNTDOWN,8,ITEM,PINK,,,,_vanish,0,NO,YES,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Purify,Do [vanish]20 damage[;]|inflict [vanish]Vanish_ALL[],1,sfxdamage(target|20); attack(20| VANISH); inflict(~ncr_vanishall~); inflict(~ncr_internalvanish~|999); if(getstatus(~ncr_vanishall~) > 0) { target.removestatus(~ncr_vanish~|ALL); } var dovanish = new elements.Skill(~Infvanishthing~); dovanish.execute(self|target); /*OFF reference; surprisingly few of these among my vanish equipment in total -ncr*/,Strobe Light,COUNTDOWN,20,MAGIC,PINK,change_power,change_power,,_vanish,0,NO,NO,NO,NO,NO,NO,NO,NO,2,,,,,,,,,,
Purify_upgraded,Do [vanish]25 damage[;]|inflict [vanish]Vanish_ALL[],1,sfxdamage(target|25); attack(25| VANISH); inflict(~ncr_vanishall~); inflict(~ncr_internalvanish~|999); if(getstatus(~ncr_vanishall~) > 0) { target.removestatus(~ncr_vanish~|ALL); } var dovanish = new elements.Skill(~Infvanishthing~); dovanish.execute(self|target);,Strobe Light,COUNTDOWN,20,MAGIC,PINK,,,,_vanish,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Purify_downgraded,Do [vanish]10 damage[;]|inflict [vanish]1 vanish,1,sfxdamage(target|10); attack(10| VANISH); if(getstatus(~ncr_vanishall~) < 1 && getstatus(VANISH) < 1 && getstatus(~ncr_vanishlegacy~) < 1) { inflict(~ncr_vanish~); inflict(~ncr_internalvanish~); var dovanish = new elements.Skill(~Vanishthing~); dovanish.execute(self|target); } else { self.textparticle(~No effect!~); },Strobe Light,COUNTDOWN,20,MAGIC,PINK,,,,_vanish,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Spectral Cauldron,Roll a new dice[;] receive [vanish]1|[gray](Reuseable),1,if(getstatusself(~ncr_vanishall~) < 1 && getstatusself(VANISH) < 1 && getstatusself(~ncr_vanishlegacy~) < 1) { inflictself(~ncr_vanish~); inflictself(~ncr_internalvanish~); var dovanishself = new elements.Skill(~Vanishselfthing~); dovanishself.execute(self|target); } givedice();,Random Roll,NORMAL,,MAGIC,PINK,change_power,change_power,,_vanish,4,YES,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Spectral Cauldron_upgraded,Roll 4 new dice[;] receive [vanish]4,1,if(getstatusself(~ncr_vanishall~) < 1 && getstatusself(VANISH) < 1 && getstatusself(~ncr_vanishlegacy~) < 1) { inflictself(~ncr_vanish~|4); inflictself(~ncr_internalvanish~|4); var dovanishself = new elements.Skill(~Vanishselfthing~); dovanishself.execute(self|target); } givedice([rand([1|2|3|4|5|6])|rand([1|2|3|4|5|6])|rand([1|2|3|4|5|6])|rand([1|2|3|4|5|6])]);,Random Roll,NORMAL,,MAGIC,PINK,,,,_vanish,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Spectral Cauldron_downgraded,Roll a new dice[;] receive [vanish]1,1,if(getstatusself(~ncr_vanishall~) < 1 && getstatusself(VANISH) < 1 && getstatusself(~ncr_vanishlegacy~) < 1) { inflictself(~ncr_vanish~); inflictself(~ncr_internalvanish~); var dovanishself = new elements.Skill(~Vanishselfthing~); dovanishself.execute(self|target); } givedice();,Random Roll,NORMAL,,MAGIC,PINK,,,,_vanish,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
The Grave,Do [vanish]<d6> damage[;]|Inflict [vanish]5 vanish,1,sfxdamage(target|d); attack(d|VANISH); if(getstatus(~ncr_vanishall~) < 1 && getstatus(VANISH) < 1 && getstatus(~ncr_vanishlegacy~) < 1) { inflict(~ncr_vanish~|5); inflict(~ncr_internalvanish~|5); var dovanish = new elements.Skill(~Vanishthing~); dovanish.execute(self|target); } else { self.textparticle(~No effect!~); },Delude,REQUIRE5|FREE5,,MAGIC,PINK,change_power,change_power,,_vanish,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
The Grave_upgraded,Do [vanish]<d6> damage[;]|Inflict [vanish]5 vanish,1,sfxdamage(target|d); attack(d|VANISH); if(getstatus(~ncr_vanishall~) < 1 && getstatus(VANISH) < 1 && getstatus(~ncr_vanishlegacy~) < 1) { inflict(~ncr_vanish~|5); inflict(~ncr_internalvanish~|5); var dovanish = new elements.Skill(~Vanishthing~); dovanish.execute(self|target); } else { self.textparticle(~No effect!~); },Delude,REQUIRE5|FREE6,,MAGIC,PINK,,,,_vanish,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
The Grave_downgraded,Inflict [vanish]5 vanish,1,if(getstatus(~ncr_vanishall~) < 1 && getstatus(VANISH) < 1 && getstatus(~ncr_vanishlegacy~) < 1) { inflict(~ncr_vanish~|5); inflict(~ncr_internalvanish~|5); var dovanish = new elements.Skill(~Vanishthing~); dovanish.execute(self|target); } else { self.textparticle(~No effect!~); },Delude,REQUIRE5,,MAGIC,PINK,,,,_vanish,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
St. Elmo's Fire,Do [vanish]2 damage[;]|inflict [vanish]1 vanish,1,sfxdamage(target|2); attack(2|VANISH); if(getstatus(~ncr_vanishall~) < 1 && getstatus(VANISH) < 1 && getstatus(~ncr_vanishlegacy~) < 1) { inflict(~ncr_vanish~); inflict(~ncr_internalvanish~); var dovanish = new elements.Skill(~Vanishthing~); dovanish.execute(self|target); } else { self.textparticle(~No effect!~); },Hadoken,NORMAL,,WEAPON,PINK,change_power,change_power,,_vanish,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
St. Elmo's Fire_upgraded,Do [vanish]3 damage[;]|inflict [vanish]1 vanish,1,sfxdamage(target|3); attack(3|VANISH); if(getstatus(~ncr_vanishall~) < 1 && getstatus(VANISH) < 1 && getstatus(~ncr_vanishlegacy~) < 1) { inflict(~ncr_vanish~); inflict(~ncr_internalvanish~); var dovanish = new elements.Skill(~Vanishthing~); dovanish.execute(self|target); } else { self.textparticle(~No effect!~); },Hadoken,NORMAL,,WEAPON,PINK,,,,_vanish,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
St. Elmo's Fire_downgraded,Do [vanish]2 damage,1,sfxdamage(target|2); attack(2|VANISH);,Hadoken,NORMAL,,WEAPON,PINK,,,,_vanish,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Mist,Do [vanish]3[;] inflict [vanish]1 vanish|[gray](once per battle),2,sfxdamage(target|3); attack(3|VANISH); if(getstatus(~ncr_vanishall~) < 1 && getstatus(VANISH) < 1 && getstatus(~ncr_vanishlegacy~) < 1) { inflict(~ncr_vanish~); inflict(~ncr_internalvanish~); var dovanish = new elements.Skill(~Vanishthing~); dovanish.execute(self|target); } else { self.textparticle(~No effect!~); },Strobe Light,COUNTDOWN,5,ITEM,PINK,change_power,change_power,,_vanish,0,NO,YES,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Mist_upgraded,Do [vanish]4[;] inflict [vanish]1 vanish|[gray](once per battle),2,sfxdamage(target|3); attack(4|VANISH); if(getstatus(~ncr_vanishall~) < 1 && getstatus(VANISH) < 1 && getstatus(~ncr_vanishlegacy~) < 1) { inflict(~ncr_vanish~); inflict(~ncr_internalvanish~); var dovanish = new elements.Skill(~Vanishthing~); dovanish.execute(self|target); } else { self.textparticle(~No effect!~); },Strobe Light,COUNTDOWN,5,ITEM,PINK,,,,_vanish,0,NO,YES,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Mist_downgraded,Inflict [vanish]1 vanish|[gray](once per battle),2,if(getstatus(~ncr_vanishall~) < 1 && getstatus(VANISH) < 1 && getstatus(~ncr_vanishlegacy~) < 1) { inflict(~ncr_vanish~); inflict(~ncr_internalvanish~); var dovanish = new elements.Skill(~Vanishthing~); dovanish.execute(self|target); } else { self.textparticle(~No effect!~); },Strobe Light,COUNTDOWN,5,ITEM,PINK,,,,_vanish,0,NO,YES,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Sheer Will,Deal [vanish]<d6> damage|Inflict [vanish]1 vanish,1,sfxdamage(target|d); attack(d|VANISH); if(getstatus(~ncr_vanishall~) < 1 && getstatus(VANISH) < 1 && getstatus(~ncr_vanishlegacy~) < 1) { inflict(~ncr_vanish~); inflict(~ncr_internalvanish~); var dovanish = new elements.Skill(~Vanishthing~); dovanish.execute(self|target); } else { self.textparticle(~No effect!~); } bonus(1000);,Delude,MIN4,,MAGIC,PINK,simplify,change_power,,_vanish,0,NO,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Sheer Will_downgraded,Deal [vanish]<d6> damage|Inflict [vanish]1 vanish,1,sfxdamage(target|d); attack(d|VANISH); if(getstatus(~ncr_vanishall~) < 1 && getstatus(VANISH) < 1 && getstatus(~ncr_vanishlegacy~) < 1) { inflict(~ncr_vanish~); inflict(~ncr_internalvanish~); var dovanish = new elements.Skill(~Vanishthing~); dovanish.execute(self|target); } else { self.textparticle(~No effect!~); },Delude,MAX3,,MAGIC,PINK,,,,_vanish,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Raw Energy,Do [vanish]<d6> damage[;]|Inflict [vanish]1 vanish,1,sfxdamage(target|d); attack(d|VANISH); if(getstatus(~ncr_vanishall~) < 1 && getstatus(VANISH) < 1 && getstatus(~ncr_vanishlegacy~) < 1) { inflict(~ncr_vanish~); inflict(~ncr_internalvanish~); var dovanish = new elements.Skill(~Vanishthing~); dovanish.execute(self|target); } else { self.textparticle(~No effect!~); },Delude,NORMAL|NORMAL,,MAGIC,PINK,change_power,complicate,,_vanish,0,NO,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Raw Energy_upgraded,Do [vanish]<d6> damage[;]|Inflict [vanish]2 vanish,1,sfxdamage(target|d); attack(d|VANISH);  if(getstatus(~ncr_vanishall~) < 1 && getstatus(VANISH) < 1 && getstatus(~ncr_vanishlegacy~) < 1) { inflict(~ncr_vanish~|2); inflict(~ncr_internalvanish~|2); var dovanish = new elements.Skill(~Vanishthing~); dovanish.execute(self|target); } else { self.textparticle(~No effect!~); },Delude,NORMAL|NORMAL,,MAGIC,PINK,,,,_vanish,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Heatless Fire,Do [vanish]4 damage|Inflict [vanish]1 vanish,2,sfxdamage(target|4); attack(4); if(getstatus(~ncr_vanishall~) < 1 && getstatus(VANISH) < 1 && getstatus(~ncr_vanishlegacy~) < 1) { inflict(~ncr_vanish~); inflict(~ncr_internalvanish~); var dovanish = new elements.Skill(~Vanishthing~); dovanish.execute(self|target); } else { self.textparticle(~No effect!~); } sfx(~_vanish~|~~|0.2);,Strobe Light,COUNTDOWN,5,WEAPON,PURPLE,change_power,change_power,,_damage,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Heatless Fire_upgraded,Do [vanish]6 damage|Inflict [vanish]1 vanish,2,sfxdamage(target|6); attack(6); if(getstatus(~ncr_vanishall~) < 1 && getstatus(VANISH) < 1 && getstatus(~ncr_vanishlegacy~) < 1) { inflict(~ncr_vanish~); inflict(~ncr_internalvanish~); var dovanish = new elements.Skill(~Vanishthing~); dovanish.execute(self|target); } else { self.textparticle(~No effect!~); } sfx(~_vanish~|~~|0.2);,Strobe Light,COUNTDOWN,5,WEAPON,PURPLE,,,,_damage,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Heatless Fire_downgraded,Do [vanish]4 damage,2,sfxdamage(target|4); attack(4);,Strobe Light,COUNTDOWN,5,WEAPON,PURPLE,,,,_damage,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Soul Jar,Inflict [vanish]1 vanish|[gray](Reuseable),1,if(getstatus(~ncr_vanishall~) < 1 && getstatus(VANISH) < 1 && getstatus(~ncr_vanishlegacy~) < 1) { inflict(~ncr_vanish~); inflict(~ncr_internalvanish~); var dovanish = new elements.Skill(~Vanishthing~); dovanish.execute(self|target); } else { self.textparticle(~No effect!~); },Hadoken,EVEN,,WEAPON,PINK,change_requirements,removereusable,,_vanish,-1,NO,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Soul Jar_upgraded,Inflict [vanish]1 vanish|[gray](Reuseable),1,if(getstatus(~ncr_vanishall~) < 1 && getstatus(VANISH) < 1 && getstatus(~ncr_vanishlegacy~) < 1) { inflict(~ncr_vanish~); inflict(~ncr_internalvanish~); var dovanish = new elements.Skill(~Vanishthing~); dovanish.execute(self|target); } else { self.textparticle(~No effect!~); },Hadoken,NORMAL,,WEAPON,PINK,,,,_vanish,-1,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Energy Crystal,Deal [vanish]<d6> damage|Inflict [vanish]1 vanish,2,sfxdamage(target|d); attack(d|VANISH); if(getstatus(~ncr_vanishall~) < 1 && getstatus(VANISH) < 1 && getstatus(~ncr_vanishlegacy~) < 1) { inflict(~ncr_vanish~); inflict(~ncr_internalvanish~); var dovanish = new elements.Skill(~Vanishthing~); dovanish.execute(self|target); } else { self.textparticle(~No effect!~); },Delude,EVEN,,MAGIC,PINK,simplify,complicate,,_vanish,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Light Pillar,Do [vanish]<d6> damage|(Cost [mana]1[]: inflict vanish),1,sfxdamage(target|d); if(getstatusself(MANA) >= 1) { removestatusself(MANA|1); attack(d | VANISH); if(getstatus(~ncr_vanishall~) < 1 && getstatus(VANISH) < 1 && getstatus(~ncr_vanishlegacy~) < 1) { inflict(~ncr_vanish~); inflict(~ncr_internalvanish~); var dovanish = new elements.Skill(~Vanishthing~); dovanish.execute(self|target); } else { self.textparticle(~No effect!~); } } else { attack(d | VANISH); } ,Delude,MIN4,,MAGIC,PINK,change_power,complicate,,_vanish,0,NO,NO,YES,NO,NO,NO,NO,NO,1,,,,,,,,,,
Light Pillar_upgraded,Do [vanish]<d6> damage|(Cost [mana]1[]: inflict vanish),1,sfxdamage(target|d); if(getstatusself(MANA) >= 1) { removestatusself(MANA|1); attack(d | VANISH); if(getstatus(~ncr_vanishall~) < 1 && getstatus(VANISH) < 1 && getstatus(~ncr_vanishlegacy~) < 1) { inflict(~ncr_vanish~); inflict(~ncr_internalvanish~); var dovanish = new elements.Skill(~Vanishthing~); dovanish.execute(self|target); } else { self.textparticle(~No effect!~); } } else { attack(d | VANISH); } ,Delude,NORMAL,,MAGIC,PINK,,,,_vanish,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Haunted Teapot,Self inflict [vanish]1 vanish|(Always offered as scrap),1,,Delude,,,ITEM,GRAY,change_power,change_power,,none,0,NO,NO,YES,NO,NO,NO,YES,NO,,,,if(getstatusself(~ncr_vanishall~) < 1 && getstatusself(VANISH) < 1 && getstatusself(~ncr_vanishlegacy~) < 1) { inflictself(~ncr_vanish~); inflictself(~ncr_internalvanish~); var dovanishself = new elements.Skill(~Vanishselfthing~); dovanishself.execute(self|target); },e.animate(~flashandshake~);,,,,,,
Haunted Teapot_upgraded,Roll an extra dice[;] get [vanish]1|(Always offered as scrap),1,,Delude,,,ITEM,GRAY,,,,none,0,NO,NO,YES,NO,NO,NO,YES,NO,,,,,e.animate(~flashandshake~); givedice(); if(getstatusself(~ncr_vanishall~) < 1 && getstatusself(VANISH) < 1 && getstatusself(~ncr_vanishlegacy~) < 1) { inflictself(~ncr_vanish~); inflictself(~ncr_internalvanish~); var dovanishself = new elements.Skill(~Vanishselfthing~); dovanishself.execute(self|target); },,,,,,
Haunted Teapot_downgraded,Self inflict [vanish]2 vanish|(Always offered as scrap),1,0,Delude,,,ITEM,GRAY,,,,none,0,NO,NO,YES,NO,NO,NO,YES,NO,,,,if(getstatusself(~ncr_vanishall~) < 1 && getstatusself(VANISH) < 1 && getstatusself(~ncr_vanishlegacy~) < 1) { inflictself(~ncr_vanish~|2); inflictself(~ncr_internalvanish~|2); var dovanishself = new elements.Skill(~Vanishselfthing~); dovanishself.execute(self|target); },e.animate(~flashandshake~);,,,,,,
Cremator,[vanish]4 damage + [vanish]1 vanish|[gray](Reuseable),1,sfxdamage(target|4); attack(4|VANISH); if(getstatus(~ncr_vanishall~) < 1 && getstatus(VANISH) < 1 && getstatus(~ncr_vanishlegacy~) < 1) { inflict(~ncr_vanish~); inflict(~ncr_internalvanish~); var dovanish = new elements.Skill(~Vanishthing~); dovanish.execute(self|target); } else { self.textparticle(~No effect!~); },Hadoken,COUNTDOWN,8,WEAPON,PURPLE,change_power,change_power,,_vanish,-1,NO,NO,YES,NO,NO,NO,NO,NO,1,,,,,,,,,,
Cremator_upgraded,[vanish]6 damage + [vanish]1 vanish|[gray](Reuseable),1,sfxdamage(target|6); attack(6|VANISH); if(getstatus(~ncr_vanishall~) < 1 && getstatus(VANISH) < 1 && getstatus(~ncr_vanishlegacy~) < 1) { inflict(~ncr_vanish~); inflict(~ncr_internalvanish~); var dovanish = new elements.Skill(~Vanishthing~); dovanish.execute(self|target); } else { self.textparticle(~No effect!~); },Hadoken,COUNTDOWN,8,WEAPON,PURPLE,,,,_vanish,-1,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Cremator_downgraded,[vanish]2 damage + [vanish]1 vanish|[gray](Reuseable),1,sfxdamage(target|2); attack(2|VANISH); if(getstatus(~ncr_vanishall~) < 1 && getstatus(VANISH) < 1 && getstatus(~ncr_vanishlegacy~) < 1) { inflict(~ncr_vanish~); inflict(~ncr_internalvanish~); var dovanish = new elements.Skill(~Vanishthing~); dovanish.execute(self|target); } else { self.textparticle(~No effect!~); },Hadoken,COUNTDOWN,8,WEAPON,PURPLE,,,,_vanish,-1,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Sandstorm,Do [weaken]3[;] inflict [weaken]1 weaken|[gray](once per battle),1,attack(3|WEAKEN); inflict(WEAKEN); sfx(~_weaken~); sfxdamage(target|3);,Burrower,COUNTDOWN,5,ITEM,ORANGE,change_power,change_power,,none,0,NO,YES,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Sandstorm_upgraded,Do [weaken]4[;] inflict [weaken]1 weaken|[gray](once per battle),1,attack(4|WEAKEN); inflict(WEAKEN); sfx(~_weaken~); sfxdamage(target|4);,Burrower,COUNTDOWN,5,ITEM,ORANGE,,,,none,0,NO,YES,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Sandstorm_downgraded,Inflict [weaken]1 shock|[gray](once per battle),1,inflict(WEAKEN); sfx(~_weaken~); /*removeequipment(e); commenting this out because it kind of doesn't make sense for the swapped versions to have bugs fixed from the original -ncr*/,Burrower,COUNTDOWN,5,ITEM,ORANGE,,,,none,0,NO,YES,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Seismometer,Do [sword]<twicetimesused> damage|Add +2 each use,2,attack((e.timesused * 2) + 4); sfxdamage(target|(e.timesused * 2) + 4); sfx(~_weaken~);,Magic Dice,COUNTDOWN,7,WEAPON,RED,reducesize,change_power,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Seismometer_downgraded,Do [sword]<twicetimesused> damage,2,attack((e.timesused * 2) + 4); e.timesused--; sfxdamage(target|(e.timesused * 2) + 4); sfx(~_weaken~);,Magic Dice,COUNTDOWN,7,WEAPON,RED,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Seismometer_weakened,Do [sword]<twicetimesused> damage,1,attack((e.timesused * 2) + 4); e.timesused--; sfxdamage(target|(e.timesused * 2) + 4); sfx(~_weaken~);,Magic Dice,COUNTDOWN,7,WEAPON,RED,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Richter Scale,Release [sword]<charge> damage|Take damage to absorb,2,attack(e.charge); sfxdamage(target|e.charge); e.charge = 0; sfx(~_weaken~);,Mumble,DOUBLES|DOUBLES,,WEAPON,RED,change_requirements,change_power,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Richter Scale_downgraded,Release[;] but do|zero damage,2,e.charge = 0; sfxdamage(target|e.charge); sfx(~_weaken~);,Mumble,DOUBLES|DOUBLES,,WEAPON,RED,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Richter Scale_upgraded,Release [sword]<charge> damage|Take damage to absorb,2,attack(e.charge); sfxdamage(target|e.charge); e.charge = 0; sfx(~_weaken~);,Mumble,EVEN,,WEAPON,RED,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Baton,Do [weaken]<d6> damage|[weaken]Weakens the enemy,1,attack(d| WEAKEN); inflict(WEAKEN); sfx(~_weaken~);,Plasma Gun,MAX3,,WEAPON,ORANGE,change_requirements,change_function,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Baton_downgraded,[weaken]Weakens the enemy,1,inflict(WEAKEN); sfx(~_weaken~);,Plasma Gun,MAX3,,WEAPON,ORANGE,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Baton_upgraded,Do [weaken]<d6> damage|[weaken]Weakens the enemy,1,attack(d| WEAKEN); inflict(WEAKEN); sfx(~_weaken~);,Plasma Gun,MAX5,,WEAPON,ORANGE,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Hex@swap,Even: [shock]1 shock|Odd: [weaken]1 weaken,1,if(d % 2 == 1) { inflict(WEAKEN); sfx(~_weaken~|~~|0.2); } else{ inflict(SHOCK); sfx(~_shock~|~~|0.2); },Electrify,NORMAL,,MAGIC,PURPLE,change_power,complicate,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Hex@swap_upgraded,Even: [shock]2 shock|Odd: [weaken]2 weaken,1,if(d % 2 == 1) { inflict(WEAKEN| 2); sfx(~_weaken~|~~|0.2); } else{ inflict(SHOCK| 2); sfx(~_shock~|~~|0.2); },Electrify,NORMAL,,MAGIC,PURPLE,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Static Fur,Shock [shock]3 equipment,1,inflict(SHOCK| 3); sfx(~_shock~);,Bear Smash,COUNTDOWN,10,WEAPON,YELLOW,change_power,change_power,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Static Fur_upgraded,Shock [shock]4 equipment,1,inflict(SHOCK| 4); sfx(~_shock~);,Bear Smash,COUNTDOWN,10,WEAPON,YELLOW,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Static Fur_downgraded,Shock [shock]1 equipment,1,inflict(SHOCK); sfx(~_shock~);,Bear Smash,COUNTDOWN,10,WEAPON,YELLOW,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Ohm Flux,Do [shock]<d6> damage|[]+[shock]2 shock,2,attack(d| SHOCK); inflict(SHOCK| 2); sfx(~_shock~); sfxdamage(target|d);,Plasma Gun,ODD,,WEAPON,YELLOW,change_power,complicate,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Ohm Flux_upgraded,Do [shock]<d6> damage|[]+[shock]2 shock,2,attack(d| SHOCK); inflict(SHOCK| 2); sfx(~_shock~); sfxdamage(target|d);,Plasma Gun,ODD|FREE1,,WEAPON,YELLOW,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Cataclysm,Inflict [weaken] weaken[;]|[fire] burn[;] and [ice] freeze,1,inflict(WEAKEN); inflict(ICE); inflict(FIRE); sfx(~_fire~); sfx(~_weaken~); sfx(~_ice~);,Oh No!,COUNTDOWN,7,MAGIC,ORANGE,change_power,change_power,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Cataclysm_upgraded,Inflict [weaken]2 weaken[;]|[fire]2 burn[;] [ice]2 freeze,1,inflict(WEAKEN| 2); inflict(ICE| 2); inflict(FIRE| 2); sfx(~_fire~); sfx(~_weaken~); sfx(~_ice~);,Oh No!,COUNTDOWN,7,MAGIC,ORANGE,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Cataclysm_downgraded,Inflict [weaken] weaken[;]|[fire] burn[;] or [ice] freeze,1,var randstatus = rand([WEAKEN|FIRE|ICE]); inflict(randstatus|1); sfx(~_~ + randstatus.toLowerCase()|~~|0.2);,Oh No!,COUNTDOWN,7,MAGIC,ORANGE,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Eerie Impulse,Inflict [shock]5 shock|[gray](once per battle),2,sfx(~_shock~); inflict(SHOCK| 5);,Electrify,REQUIRE5,,SHIELD,YELLOW,reducesize,change_power,,none,0,NO,YES,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Eerie Impulse_downgraded,Inflict [shock]3 shock|[gray](once per battle),2,inflict(SHOCK| 3); sfx(~_shock~);,Electrify,REQUIRE3,,SHIELD,YELLOW,,,,none,0,NO,YES,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Eerie Impulse_weakened,Inflict [shock]3 shock|[gray](once per battle),1,inflict(SHOCK| 3); sfx(~_shock~);,Electrify,REQUIRE3,,SHIELD,YELLOW,,,,none,0,NO,YES,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Polaraxe,Do [sword]<d6> damage[;]|[ice]Freeze and [weaken]Weaken,1,attack(d); inflict(ICE| 1); inflict(WEAKEN| 1); sfx(~_weaken~); sfx(~_ice~); sfxdamage(target|d);,Flash Freeze,MAX4,,WEAPON,BRIGHTCYAN,change_power,change_power,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Polaraxe_upgraded,Do [sword]<d6> damage[;]|[ice]Freeze and [weaken]Weaken,1,attack(d); inflict(ICE| 1); inflict(WEAKEN| 1); sfx(~_weaken~); sfx(~_ice~); sfxdamage(target|d);,Flash Freeze,NORMAL,,WEAPON,BRIGHTCYAN,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Polaraxe_downgraded,Do [sword]<d6> damage,1,attack(d); sfxdamage(target|d); sfx(~_ice~);,Flash Freeze,REQUIRE5,,WEAPON,BRIGHTCYAN,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Burndiche,Do [sword]<d6> damage[;]|[fire]Burn and [weaken]Weaken,1,attack(d); inflict(FIRE| 1); inflict(WEAKEN| 1); sfx(~_weaken~); sfx(~_fire~); sfxdamage(target|d);,Hellfire,MAX4,,WEAPON,RED,change_power,change_power,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Burndiche_upgraded,Do [sword]<d6> damage[;]|[fire]Burn and [weaken]Weaken,1,attack(d); inflict(FIRE| 1); inflict(WEAKEN| 1); sfx(~_weaken~); sfx(~_fire~); sfxdamage(target|d);,Hellfire,NORMAL,,WEAPON,RED,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Burndiche_downgraded,Do [sword]<d6> damage,1,attack(d); sfxdamage(target|d); sfx(~_fire~);,Hellfire,REQUIRE5,,WEAPON,RED,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Power Hammer,[shock]<d6> damage + [shock]1 shock|,1,attack(d| SHOCK);  inflict(SHOCK| 1); sfx(~_shock~); sfxdamage(target|d);,Zap,MAX3,,WEAPON,YELLOW,change_power,change_power,,none,3,NO,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Power Hammer_upgraded,[shock]1 shock + [shock]<d6> damage|,1,inflict(SHOCK| 1); attack(d| SHOCK); sfx(~_shock~); sfxdamage(target|d);,Zap,MAX3|FREE1,,WEAPON,YELLOW,,,,none,3,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Power Hammer_downgraded,[shock]<d6> damage + [shock]1 shock|,1,attack(d| SHOCK);  inflict(SHOCK| 1); sfx(~_shock~); sfxdamage(target|d);,Zap,REQUIRE1,,WEAPON,YELLOW,,,,none,3,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Cement Mixer,[weaken]2 damage + [weaken]1 weaken|[gray](Reuseable),1,attack(2| WEAKEN); inflict(WEAKEN| 1); sfxdamage(target|2); sfx(~_weaken~);,Theremin,COUNTDOWN,5,WEAPON,ORANGE,change_power,change_power,,none,-1,NO,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Cement Mixer_upgraded,[weaken]3 damage + [weaken]1 weaken|[gray](Reuseable),1,attack(3| WEAKEN); inflict(WEAKEN| 1); sfxdamage(target|3); sfx(~_weaken~);,Theremin,COUNTDOWN,5,WEAPON,ORANGE,,,,none,-1,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Cement Mixer_downgraded,[weaken]1 damage + [weaken]1 weaken|[gray](Reuseable),1,attack(1| WEAKEN); inflict(WEAKEN| 1); sfxdamage(target|1); sfx(~_weaken~);,Theremin,COUNTDOWN,5,WEAPON,ORANGE,,,,none,-1,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Ampere,Inflict [shock]1 shock,2,inflict(SHOCK| 1); sfx(~_shock~);,Zap,NORMAL,,SHIELD,YELLOW,change_power,complicate,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Ampere_upgraded,Inflict [shock]2 shock,2,inflict(SHOCK| 2); sfx(~_shock~);,Zap,NORMAL,,SHIELD,YELLOW,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Closed Circuit,Roll a dice for every|[shock]1 shock on enemy,1,sfx(~_shock~); var numshock = getstatus(SHOCK); if(numshock > 0) { var returndice = []; for(i in 0 ... numshock) { returndice.push(rand([1|2|3|4|5|6])); } givedice(returndice); },Zap,MAX3,,MAGIC,YELLOW,simplify,complicate,,none,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Ant Pincer,Do [weaken]4 damage[;]|Inflict [weaken]1 weaken,1,attack(4| WEAKEN); inflict(WEAKEN | 1); sfxdamage(target|4); sfx(~_weaken~);,Mumble,COUNTDOWN,5,WEAPON,ORANGE,change_power,change_power,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Ant Pincer_upgraded,Do [weaken]6 damage[;]|Inflict [weaken]1 weaken,1,attack(6| WEAKEN); inflict(WEAKEN | 1); sfxdamage(target|6); sfx(~_weaken~);,Mumble,COUNTDOWN,5,WEAPON,ORANGE,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Ant Pincer_downgraded,Do [sword]4 damage,1,attack(4); sfxdamage(target|4); sfx(~_weaken~);,Mumble,COUNTDOWN,5,WEAPON,ORANGE,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
HP Shout,Do [shock]<d6> damage|25% chance +[shock]2 shock,1,var odds = 25; if(getstatusself(~luck~) > 0){ odds += 25; } else if(getstatusself(~luck+~) > 0){ odds = 100; } if(chance(odds)) { self.textparticle(~Success!~); inflict(SHOCK| 2); } attack(d| SHOCK); sfx(~_shock~); sfxdamage(target|d);,Zap,MAX5,,WEAPON,YELLOW,change_power,change_power,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
HP Shout_upgraded,Do [shock]<d6> damage|25% chance +[shock]3 shock,1,var odds = 25; if(getstatusself(~luck~) > 0){ odds += 25; } else if(getstatusself(~luck+~) > 0){ odds = 100; } if(chance(odds)) { self.textparticle(~Success!~); inflict(SHOCK| 3); } attack(d| SHOCK); sfx(~_shock~); sfxdamage(target|d);,Zap,MAX5,,WEAPON,YELLOW,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
HP Shout_downgraded,Do [shock]<d6> damage,1,attack(d| SHOCK); sfx(~_shock~); sfxdamage(target|d);,Zap,MAX5,,WEAPON,YELLOW,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Discharge,Do [sword]4 damage per [shock]1|Enemy loses all shock,1,attack(getstatus(SHOCK) * 4); removestatus(SHOCK| getstatus(SHOCK)); sfx(~_shock~); sfxdamage(target|getstatus(SHOCK) * 4);,Zap,DOUBLES|DOUBLES,,WEAPON,YELLOW,change_power,change_power,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Discharge_upgraded,Do [sword]5 damage per [shock]1|Enemy loses all shock,1,attack(getstatus(SHOCK) * 5); removestatus(SHOCK| getstatus(SHOCK)); sfx(~_shock~); sfxdamage(target|getstatus(SHOCK) * 5);,Zap,DOUBLES|DOUBLES,,WEAPON,YELLOW,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Discharge_downgraded,Do [sword]2 damage per [shock]1|Enemy loses all shock,1,attack(getstatus(SHOCK) * 2); removestatus(SHOCK| getstatus(SHOCK)); sfx(~_shock~); sfxdamage(target|getstatus(SHOCK) * 2);,Zap,DOUBLES|DOUBLES,,WEAPON,YELLOW,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Love Hertz,Do [shock]<d6> damage|[shock]Shocks enemy,2,bonus(1000); attack(d| SHOCK); inflict(SHOCK); sfx(~_shock~); sfxdamage(target|d);,Electrify,MAX4,,WEAPON,YELLOW,change_power,change_power,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Love Hertz_upgraded,Do [shock]<d6> damage|[shock]Shocks enemy,2,bonus(1000); attack(d| SHOCK); inflict(SHOCK); sfx(~_shock~); sfxdamage(target|d);,Electrify,MAX5,,WEAPON,YELLOW,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Love Hertz_downgraded,Do [shock]<d6> damage,2,bonus(1000); attack(d| SHOCK); sfx(~_shock~); sfxdamage(target|d);,Electrify,MAX4,,WEAPON,YELLOW,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
High Frequency,Do [shock]12 damage,2,attack(12|SHOCK); sfx(~_shock~); sfxdamage(target|12);,Electrify,COUNTDOWN,20,WEAPON,YELLOW,change_power,change_power,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
High Frequency_upgraded,Do [shock]12 damage|[shock]Shocks enemy,2,attack(12|SHOCK); inflict(SHOCK); sfx(~_shock~); sfxdamage(target|12);,Electrify,COUNTDOWN,20,WEAPON,YELLOW,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
High Frequency_downgraded,Do [shock]9 damage,2,attack(9|SHOCK); sfx(~_shock~); sfxdamage(target|9);,Electrify,COUNTDOWN,20,WEAPON,YELLOW,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Giant Fissure,Do [weaken]20 damage[;]|[weaken]Weaken all equipment,2,attack(20| WEAKEN); inflict(WEAKEN|ALL); sfx(~_weaken~); sfxdamage(target|20);,Hellfire,COUNTDOWN,20,MAGIC,ORANGE,change_power,change_power,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Giant Fissure_upgraded,Do [weaken]25 damage[;]|[weaken]Weaken all equipment,2,attack(25| WEAKEN); inflict(WEAKEN|ALL); sfx(~_weaken~); sfxdamage(target|25);,Hellfire,COUNTDOWN,20,MAGIC,ORANGE,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Giant Fissure_downgraded,Do [weaken]10 damage[;]|[weaken]Weaken all equipment,2,attack(10| WEAKEN); inflict(WEAKEN|ALL); sfx(~_weaken~); sfxdamage(target|10);,Hellfire,COUNTDOWN,20,MAGIC,ORANGE,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Conductivity,Do [shock]3 damage[;]|+[shock]2 if enemy is shocked,2,sfx(~_shock~); if(getstatus(SHOCK) > 0) { attack((5) | SHOCK); sfxdamage(target|5);} else { attack((3) | SHOCK); sfxdamage(target|3); },Electrify,ODD,,WEAPON,YELLOW,change_power,change_power,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Conductivity_upgraded,Do [shock]3 damage[;]|+[shock]4 if enemy is shocked,2,sfx(~_shock~); if(getstatus(SHOCK) > 0) { attack((7) | SHOCK); sfxdamage(target|7); } else { attack((3) | SHOCK); sfxdamage(target|3); },Electrify,ODD,,WEAPON,YELLOW,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Conductivity_downgraded,Do [shock]1 damage[;]|+[shock]2 if enemy is shocked,2,sfx(~_shock~); if(getstatus(SHOCK) > 0) { attack((3) | SHOCK); sfxdamage(target|3); } else { attack((1) | SHOCK); sfxdamage(target|1); },Electrify,ODD,,WEAPON,YELLOW,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
The Earth,Do [weaken]<d6> damage[;]|Weaken [weaken]6 and silence,1,attack(d| WEAKEN); inflict(WEAKEN | 6); inflict(SILENCE); sfx(~_weaken~|~~|0.1); sfxdamage(target|12); sfx(~_silence~|~~|0.1);,Mumble,REQUIRE6|FREE6,,MAGIC,ORANGE,change_power,change_power,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
The Earth_upgraded,Do [weaken]<d6> damage[;]|Weaken [weaken]6 and silence,1,attack(d| WEAKEN); inflict(WEAKEN | 6); inflict(SILENCE); sfx(~_weaken~|~~|0.1); sfxdamage(target|12); sfx(~_silence~|~~|0.1);,Mumble,REQUIRE6|FREE6,,MAGIC,ORANGE,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
The Earth_downgraded,Weaken [weaken]6 and silence,1,inflict(WEAKEN | 6); inflict(SILENCE); sfx(~_weaken~|~~|0.1); sfx(~_silence~|~~|0.1);,Mumble,REQUIRE6,,MAGIC,ORANGE,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Grimace,Curse enemy,2,inflict(CURSE); bonus(1000);,Dramatic Pause,EVEN,,MAGIC,PURPLE,simplify,complicate,,_curse,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Cuss Words,Curse enemy|[gray](Reuseable),2,inflict(CURSE);,Dramatic Pause,ODD,,ITEM,PURPLE,change_power,removereusable,,_curse,2,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Cuss Words_upgraded,Curse enemy|[gray](Reuseable),2,inflict(CURSE);,Dramatic Pause,ODD,,ITEM,PURPLE,,,,_curse,3,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Bone Whack,Do [sword]<d6> damage[;]|inflict [curse]Curse on 3,1,attack(d); if(d == 3) { inflict(CURSE); } if(d != 3) { sfxdamage(target|d); } else {  sfxdamage(target|d); sfx(~_curse~|~~|0.2); },Regenerate,MAX3,,WEAPON,PURPLE,change_power,change_power,,none,0,NO,NO,YES,NO,NO,NO,NO,NO,1,,,,,,,,,,
Bone Whack_downgraded,Do [sword]<d6> damage[;]|inflict [curse]Curse on 2,1,attack(d); if(d == 2) { inflict(CURSE); } if(d != 2) { sfxdamage(target|d); } else {  sfxdamage(target|d); sfx(~_curse~|~~|0.2); },Regenerate,MAX2,,WEAPON,PURPLE,,,,none,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Bone Whack_upgraded,Do [sword]<d6> damage[;]|inflict [curse]Curse on 5,1,attack(d); if(d == 5) { inflict(CURSE); } if(d != 5) { sfxdamage(target|d); } else {  sfxdamage(target|d); sfx(~_curse~|~~|0.2); },Regenerate,MAX5,,WEAPON,PURPLE,,,,none,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Beetle Bodyslam,Do [sword]5 damage[;]|Curse enemy,2,attack(5); inflict(CURSE); sfxdamage(target|5); sfx(~_curse~|~~|0.1);,Dramatic Pause,COUNTDOWN,12,WEAPON,PURPLE,change_power,change_power,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Beetle Bodyslam_upgraded,Do [sword]8 damage[;]|Curse enemy,2,attack(8); inflict(CURSE); sfxdamage(target|8); sfx(~_curse~|~~|0.1);,Dramatic Pause,COUNTDOWN,12,WEAPON,PURPLE,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Beetle Bodyslam_downgraded,Curse enemy,2,inflict(CURSE);,Dramatic Pause,COUNTDOWN,12,WEAPON,PURPLE,,,,_curse,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Evil Eye,Curse enemy|[gray](Reuseable),2,inflict(CURSE);,Dramatic Pause,REQUIRE1,,WEAPON,YELLOW,change_power,change_power,,_curse,2,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Evil Eye_upgraded,Curse enemy|[gray](Reuseable),2,inflict(CURSE);,Dramatic Pause,REQUIRE1,,WEAPON,YELLOW,,,,_curse,-1,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Evil Eye_downgraded,Curse enemy,2,inflict(CURSE);,Dramatic Pause,REQUIRE1,,WEAPON,YELLOW,,,,_curse,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Ominous Clouds,Do [sword]3[;] curse enemy|[gray](once per battle),2,attack(3); inflict(CURSE); sfxdamage(target|3); sfx(~_curse~|~~|0.1);,Dramatic Pause,COUNTDOWN,5,ITEM,PURPLE,change_power,change_power,,none,0,NO,YES,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Ominous Clouds_upgraded,Do [sword]4[;] curse enemy|[gray](once per battle),2,attack(4); inflict(CURSE); sfxdamage(target|4); sfx(~_curse~|~~|0.1);,Dramatic Pause,COUNTDOWN,5,ITEM,PURPLE,,,,none,0,NO,YES,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Ominous Clouds_downgraded,Curse enemy|[gray](once per battle),2,inflict(CURSE);,Dramatic Pause,COUNTDOWN,5,ITEM,PURPLE,,,,_curse,0,NO,YES,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Care Bear Stare,Curse enemy,1,inflict(CURSE); bonus(1000);,Dramatic Pause,REQUIRE1,,MAGIC,PURPLE,increaserange,doublerequirements,,_curse,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Dire Wolf Glare,Lock [lock]1 dice,2,inflict(LOCK);,Confiscate,DOUBLES|DOUBLES,,MAGIC,PURPLE,change_power,change_power,,_lock,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Dire Wolf Glare_upgraded,Lock [lock]1 dice,2,inflict(LOCK);,Confiscate,COUNTDOWN,10,MAGIC,PURPLE,,,,_lock,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Dire Wolf Glare_downgraded,Lock [lock]1 dice,2,inflict(LOCK);,Confiscate,REQUIRE6|REQUIRE6,,MAGIC,PURPLE,,,,_lock,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Shout,Lock [lock]1 dice,2,inflict(LOCK); bonus(1000);,Confiscate,REQUIRE2,,MAGIC,PURPLE,change_power,doublerequirements,,_lock,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Shout_upgraded,Lock [lock]1 dice,2,inflict(LOCK); bonus(1000);,Confiscate,MAX2,,MAGIC,PURPLE,,,,_lock,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Censor,Lock [lock]1 dice for everyone,1,inflict(LOCK); inflictself(LOCK); var selfdicelist = []; var targetdicelist = []; if(self.dicepool.length > 0) for(mydice in self.dicepool) if(mydice.available()) selfdicelist.push(mydice); if(selfdicelist.length > 0) rand(selfdicelist).animate(~lock~); if(target.dicepool.length > 0) for(mydice in target.dicepool) if(mydice.available()) targetdicelist.push(mydice); if(targetdicelist.length > 0) rand(targetdicelist).animate(~lock~);,Confiscate,EVEN,,WEAPON,PURPLE,change_power,change_power,,_lock,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Censor_upgraded,Lock [lock]1 dice for enemy,1,inflict(LOCK);,Confiscate,EVEN,,WEAPON,PURPLE,,,,_lock,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Censor_downgraded,Lock [lock]1 player dice,1,inflictself(LOCK); var selfdicelist = []; if(self.dicepool.length > 0) for(mydice in self.dicepool) if(mydice.available()) selfdicelist.push(mydice); if(selfdicelist.length > 0) rand(selfdicelist).animate(~lock~);,Confiscate,EVEN,,WEAPON,PURPLE,,,,_lock,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Shiny Crystal,Lock [lock]1 dice,2,inflict(LOCK);,Confiscate,ODD,,MAGIC,PURPLE,simplify,complicate,,_lock,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Fishing Rod,Do [sword]<d6> damage[;]|on 6[;] inflict [lock]Lock,2,attack(d); if(d == 6) inflict(LOCK); if(d < 6) { sfxdamage(target|d); } else { sfxdamage(target|d); sfx(~_lock~|~~|0.2); },Confiscate,NORMAL,,MAGIC,PURPLE,change_power,change_power,,none,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Fishing Rod_upgraded,Do [sword]<d6> damage[;]|on even[;] inflict [lock]Lock,2,attack(d); if(d % 2 == 0) inflict(LOCK); if(d % 2 == 1) { sfxdamage(target|d); } else { sfxdamage(target|d); sfx(~_lock~|~~|0.2); },Confiscate,NORMAL,,MAGIC,PURPLE,,,,none,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Fishing Rod_downgraded,Do [sword]<d6> damage,2,attack(d);,Confiscate,NORMAL,,MAGIC,PURPLE,,,,none,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Tackle,Do [sword]<d6> damage[;] double|if enemy is [lock]locked,2,if(getstatus(LOCK) > 0) { attack((d * 2)); } else { attack((d)); },Confiscate,MAX3,,WEAPON,PURPLE,change_power,change_power,,_damage,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Tackle_upgraded,Do [sword]<d6> damage[;] double|if enemy is [lock]locked,2,if(getstatus(LOCK) > 0) { attack((d * 2)); } else { attack((d)); },Confiscate,MAX4,,WEAPON,PURPLE,,,,_damage,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Tackle_downgraded,Do [sword]<d6> damage[;] double|if enemy is [lock]locked,2,if(getstatus(LOCK) > 0) { attack((d * 2)); } else { attack((d)); },Confiscate,MAX2,,WEAPON,PURPLE,,,,_damage,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Doublethink,Do [sword]<d6> damage[;] x3 if|all other dice are [lock]locked,1,trace(~hi~); var alldicelocked = true; var somelockeddice = false; var i = 0; trace(self.dicepool); if(!self.dicepool.length == 0) for(mydice in self.dicepool) { if(mydice.locked) somelockeddice = true; if(mydice.available()) { alldicelocked = false; break; } } trace(alldicelocked); trace(somelockeddice); if(alldicelocked && somelockeddice) { attack((d * 3)); } else { attack((d)); } trace(~bye~);,Confiscate,MAX4,,WEAPON,PURPLE,change_power,change_power,,_damage,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Doublethink_upgraded,Do [sword]<d6> damage[;] x3 if|all other dice are [lock]locked,1,trace(~hi~); var alldicelocked = true; var somelockeddice = false; var i = 0; trace(self.dicepool); if(!self.dicepool.length == 0) for(mydice in self.dicepool) { if(mydice.locked) somelockeddice = true; if(mydice.available()) { alldicelocked = false; break; } } trace(alldicelocked); trace(somelockeddice); if(alldicelocked && somelockeddice) { attack((d * 3)); } else { attack((d)); } trace(~bye~);,Confiscate,MAX5,,WEAPON,PURPLE,,,,_damage,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Doublethink_downgraded,Do [sword]<d6> damage[;] x3 if|all other dice are [lock]locked,1,trace(~hi~); var alldicelocked = true; var somelockeddice = false; var i = 0; trace(self.dicepool); if(!self.dicepool.length == 0) for(mydice in self.dicepool) { if(mydice.locked) somelockeddice = true; if(mydice.available()) { alldicelocked = false; break; } } trace(alldicelocked); trace(somelockeddice); if(alldicelocked && somelockeddice) { attack((d * 3)); } else { attack((d)); } trace(~bye~);,Confiscate,MAX3,,WEAPON,PURPLE,,,,_damage,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Cliffhanger,Lock [lock]1 dice,2,inflict(LOCK); bonus(1000);,Confiscate,EVEN,,FINAL,,simplify,complicate,,_lock,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Illegal Mirror,Next turn[;] gain +1 dice this|fight[;] and lock yourself,1,jinx(~Illegal Mirror~|~gain +1 dice and lock yourself~|~Gain +1 dice[;] lock yourself~|~target.extradice++; inflict(LOCK); sfx(\~_lock\~|\~\~|0.2);~|self|self|1|1); sfx(~_thinghappens~);,Infinity Mirror,EVEN,,MAGIC,PURPLE,simplify,complicate,,none,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Raw Intimidation,Lock [lock]1 dice,1,inflict(LOCK);,Confiscate,COUNTDOWN,12,MAGIC,PURPLE,threequartercountdown,noeffect,,_lock,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
House Arrest,At the start of each turn[;]|lock [lock]1 dice for everyone,1,,Confiscate,,,WEAPON,PURPLE,change_power,change_power,,none,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,e.animate(~flashandshake~); inflict(LOCK); inflictself(LOCK); var selfdicelist = []; var targetdicelist = []; if(self.dicepool.length > 0) for(mydice in self.dicepool) if(mydice.available()) selfdicelist.push(mydice); if(selfdicelist.length > 0) rand(selfdicelist).animate(~lock~); if(target.dicepool.length > 0) for(mydice in target.dicepool) if(mydice.available()) targetdicelist.push(mydice); if(targetdicelist.length > 0) rand(targetdicelist).animate(~lock~); sfx(~_lock~);,,,,,,
House Arrest_upgraded,At the start of each turn[;]|lock [lock]1 dice for enemy,1,,Confiscate,,,WEAPON,PURPLE,,,,none,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,e.animate(~flashandshake~); inflict(LOCK); sfx(~_lock~);,,,,,,
House Arrest_downgraded,At the start of each turn[;]|lock [lock]1 player dice,1,,Confiscate,,,WEAPON,PURPLE,,,,none,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,e.animate(~flashandshake~); inflictself(LOCK); var selfdicelist = []; if(self.dicepool.length > 0) for(mydice in self.dicepool) if(mydice.available()) selfdicelist.push(mydice); if(selfdicelist.length > 0) rand(selfdicelist).animate(~lock~);,,,,,,
Law and Order,Do [sword]30 damage[;]|lock [lock]ALL dice but two,2,var dicelock = target.dice + target.extradice + target.bonusdice - 2; attack(30); dicelock > 0 ? inflict(LOCK|dicelock); sfxdamage(target|30); sfx(~_lock~|~~|0.2);,Hellfire,COUNTDOWN,20,MAGIC,PURPLE,change_power,change_power,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Law and Order_upgraded,Do [sword]35 damage[;]|lock [lock]ALL dice but two,2,var dicelock = target.dice + target.extradice + target.bonusdice - 2; attack(35); dicelock > 0 ? inflict(LOCK|dicelock); sfxdamage(target|35); sfx(~_lock~|~~|0.2);,Hellfire,COUNTDOWN,20,MAGIC,PURPLE,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Law and Order_downgraded,Do [sword]20 damage[;]|lock [lock]ALL dice but two,2,var dicelock = target.dice + target.extradice + target.bonusdice - 2; attack(20); dicelock > 0 ? inflict(LOCK|dicelock); sfxdamage(target|20); sfx(~_lock~|~~|0.2);,Hellfire,COUNTDOWN,20,MAGIC,PURPLE,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Tentacle Grip,Lock [lock]1 dice,2,inflict(LOCK); bonus(1000);,Confiscate,REQUIRE4,,MAGIC,PURPLE,change_power,doublerequirements,,_lock,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Tentacle Grip_upgraded,Lock [lock]1 dice,2,inflict(LOCK); bonus(1000);,Confiscate,EVEN,,MAGIC,PURPLE,,,,_lock,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Grappling Hook,Next equipment has|+1 use this turn,1,inflictself(REEQUIPNEXT); /*this was actually an old version of hookshot. maybe 'hookshot' and 'grappling hook' mean the same thing and this is dumb. dunno*/,Efficiency,COUNTDOWN,8,ITEM,GREEN,halfcountdown,noeffect,,_recycle,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Hookpoint,Next equipment has|+1 use this turn,2,inflictself(REEQUIPNEXT);,Efficiency,EVEN,,ITEM,GREEN,simplify,complicate,,_recycle,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Pet Peeve,Repeat next action,2,inflictself(FURY); /*neypah wanted this named 'rage'; unfortunately that's already the name of an unused skill*/,Fury,EVEN,,ITEM,RED,simplify,complicate,,_fury,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,e.maintainfury = true; e.preventdefault = true;,
Yo Ho Ho,Next equipment has|+1 use this turn,2,inflictself(REEQUIPNEXT); /*swapped around neypah's pirate sounds a bit*/,Efficiency,COUNTDOWN,6,MAGIC,GREEN,halfcountdown,noeffect,,_recycle,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Caw Caw Caw,Dodge next attack,2,inflictself(DODGE); /*loud bird sounds overlap a bit with wax's scrapped dodge/fury swap*/,Quick Thinking,COUNTDOWN,10,MAGIC,YELLOW,halfcountdown,noeffect,,_dodge,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Har Har Har,Do [sword]5 damage|+2 if already used this turn,2,if(e.getvar(~used~)) { attack(7); sfxdamage(target|7); } else { attack(5); sfxdamage(target|5); } e.setvar(~used~|true);,Efficiency,COUNTDOWN,3,MAGIC,GREEN,change_power,change_power,,_recycle,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,e.resetvar(~used~);,,,,,
Har Har Har_upgraded,Do [sword]7 damage,2,attack(7); sfxdamage(target|7);,Efficiency,COUNTDOWN,3,MAGIC,GREEN,,,,_recycle,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,e.resetvar(~used~);,,,,,
Har Har Har_downgraded,Do [sword]3 damage|+2 if already used this turn,2,if(e.getvar(~used~)) { attack(5); sfxdamage(target|5); } else { attack(3); sfxdamage(target|3); } e.setvar(~used~|true);,Efficiency,COUNTDOWN,3,MAGIC,GREEN,,,,_recycle,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Peck Peck Peck,Do [sword]5 dmg[;] get a new|dice if you have [dodge]Dodge,2,attack(5); if(getstatusself(DODGE) > 0) givedice(); sfxdamage(target|5);,Quick Thinking,COUNTDOWN,3,MAGIC,YELLOW,change_power,change_power,,none,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Peck Peck Peck_upgraded,Do [sword]7 dmg[;] get a new|dice if you have [dodge]Dodge,2,attack(7); if(getstatusself(DODGE) > 0) givedice(); sfxdamage(target|7);,Quick Thinking,COUNTDOWN,3,MAGIC,YELLOW,,,,none,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Peck Peck Peck_downgraded,Do [sword]3 dmg[;] get a new|dice if you have [dodge]Dodge,2,attack(3); if(getstatusself(DODGE) > 0) givedice(); sfxdamage(target|3);,Quick Thinking,COUNTDOWN,3,MAGIC,YELLOW,,,,none,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Yargh Argh Argh,Reroll a dice (maintains|[recycle]Re-Equip[] on first use),2,givedice(); trace(self.getvar(~yarghtemp~)); if(self.getvar(~yarghtemp~) > 0) { inflictself(REEQUIPNEXT); self.setvar(~yarghtemp~|self.getvar(~yarghtemp~) - 1); } /*does not work in pu for the same reason pirate hook? does not work; re-equip? not having the right before execute priority*/,Efficiency,MAX4,,MAGIC,GREEN,change_power,change_power,,none,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,e.timesused = 0; self.setvar(~yarghtemp~|0);,,,,if(e.timesused == 0 && getstatusself(REEQUIPNEXT) > 0) { self.setvar(~yarghtemp~|self.getvar(~yarghtemp~) + 1); trace(~hi: ~ + self.getvar(~yarghtemp~)); },,,
Yargh Argh Argh_upgraded,Reroll a dice (maintains|[recycle]Re-Equip[] on first use),2,givedice(); trace(self.getvar(~yarghtemp~)); if(self.getvar(~yarghtemp~) > 0) { inflictself(REEQUIPNEXT); self.setvar(~yarghtemp~|self.getvar(~yarghtemp~) - 1); },Efficiency,NORMAL,,MAGIC,GREEN,,,,none,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,e.timesused = 0; self.setvar(~yarghtemp~|0);,,,,if(e.timesused == 0 && getstatusself(REEQUIPNEXT) > 0) { self.setvar(~yarghtemp~|self.getvar(~yarghtemp~) + 1); trace(~hi: ~ + self.getvar(~yarghtemp~)); },,,
Yargh Argh Argh_downgraded,Reroll a dice,2,0,Efficiency,MAX4,,MAGIC,GREEN,,,,none,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
get alt reequip test,yep!,1,inflictself(~alternate_reequipnext~);,Time Stop,NORMAL,,MAGIC,GREEN,,,,none,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Sacred Grounds,Do [sword]<d6> damage[;] inflict|[vanish]Vanish and [weaken]Weaken,1,attack(d); if(getstatus(~ncr_vanishall~) < 1 && getstatus(VANISH) < 1 && getstatus(~ncr_vanishlegacy~) < 1) { inflict(~ncr_vanish~); inflict(~ncr_internalvanish~); var dovanish = new elements.Skill(~Vanishthing~); dovanish.execute(self|target); } else { self.textparticle(~No effect!~); } inflict(WEAKEN| 1); sfx(~_vanish~|~~|0.2); sfx(~_weaken~|~~|0.2);,Hadoken,MAX4,,WEAPON,PINK,change_power,change_power,,_damage,0,NO,NO,YES,NO,NO,NO,NO,NO,1,,,,,,,,,,
Sacred Grounds_upgraded,Do [sword]<d6> damage[;] inflict|[vanish]Vanish and [weaken]Weaken,1,attack(d); if(getstatus(~ncr_vanishall~) < 1 && getstatus(VANISH) < 1 && getstatus(~ncr_vanishlegacy~) < 1) { inflict(~ncr_vanish~); inflict(~ncr_internalvanish~); var dovanish = new elements.Skill(~Vanishthing~); dovanish.execute(self|target); } else { self.textparticle(~No effect!~); } inflict(WEAKEN| 1); sfx(~_vanish~|~~|0.2); sfx(~_weaken~|~~|0.2);,Hadoken,NORMAL,,WEAPON,PINK,,,,_damage,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Sacred Grounds_downgraded,Do [sword]<d6> damage,1,attack(d);,Hadoken,REQUIRE5,,WEAPON,PINK,,,,_damage,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Ghost Story,Inflict [shock] shock[;]|[vanish] vanish[;] and [ice] freeze,1,inflict(SHOCK); inflict(ICE); if(getstatus(~ncr_vanishall~) < 1 && getstatus(VANISH) < 1 && getstatus(~ncr_vanishlegacy~) < 1) { inflict(~ncr_vanish~); inflict(~ncr_internalvanish~); var dovanish = new elements.Skill(~Vanishthing~); dovanish.execute(self|target); },Oh No!,COUNTDOWN,7,MAGIC,PINK,change_power,change_power,,_multistatus,0,NO,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Ghost Story_upgraded,Inflict [shock]2 shock[;]|[vanish]2 vanish[;] [ice]2 freeze,1,inflict(SHOCK| 2); inflict(ICE| 2); if(getstatus(~ncr_vanishall~) < 1 && getstatus(VANISH) < 1 && getstatus(~ncr_vanishlegacy~) < 1) { inflict(~ncr_vanish~|2); inflict(~ncr_internalvanish~|2); var dovanish = new elements.Skill(~Vanishthing~); dovanish.execute(self|target); },Oh No!,COUNTDOWN,7,MAGIC,PINK,,,,_multistatus,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Ghost Story_downgraded,Inflict [shock] shock[;]|[vanish] vanish[;] or [ice] freeze,1,var randstatus = rand([SHOCK|~vanish~|ICE]); if(randstatus != ~vanish~) { inflict(randstatus|1); } else { if(getstatus(~ncr_vanishall~) < 1 && getstatus(VANISH) < 1 && getstatus(~ncr_vanishlegacy~) < 1) { inflict(~ncr_vanish~); inflict(~ncr_internalvanish~); var dovanish = new elements.Skill(~Vanishthing~); dovanish.execute(self|target); } else { self.textparticle(~No effect!~); } } sfx(~_~ + randstatus.toLowerCase()|~~|0.2);,Oh No!,COUNTDOWN,7,MAGIC,PINK,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Ghost Town,Inflict [weaken] weaken[;]|[vanish] vanish[;] and [ice] freeze,1,inflict(WEAKEN); inflict(ICE); if(getstatus(~ncr_vanishall~) < 1 && getstatus(VANISH) < 1 && getstatus(~ncr_vanishlegacy~) < 1) { inflict(~ncr_vanish~); inflict(~ncr_internalvanish~); var dovanish = new elements.Skill(~Vanishthing~); dovanish.execute(self|target); },Oh No!,COUNTDOWN,7,MAGIC,PURPLE,change_power,change_power,,_multistatus,0,NO,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Ghost Town_upgraded,Inflict [weaken]2 weaken[;]|[vanish]2 vanish[;] [ice]2 freeze,1,inflict(WEAKEN| 2); inflict(ICE| 2); if(getstatus(~ncr_vanishall~) < 1 && getstatus(VANISH) < 1 && getstatus(~ncr_vanishlegacy~) < 1) { inflict(~ncr_vanish~|2); inflict(~ncr_internalvanish~|2); var dovanish = new elements.Skill(~Vanishthing~); dovanish.execute(self|target); },Oh No!,COUNTDOWN,7,MAGIC,PURPLE,,,,_multistatus,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Ghost Town_downgraded,Inflict [weaken] weaken[;]|[vanish] vanish[;] or [ice] freeze,1,var randstatus = rand([WEAKEN|~vanish~|ICE]); if(randstatus != ~vanish~) { inflict(randstatus|1); } else { if(getstatus(~ncr_vanishall~) < 1 && getstatus(VANISH) < 1 && getstatus(~ncr_vanishlegacy~) < 1) { inflict(~ncr_vanish~); inflict(~ncr_internalvanish~); var dovanish = new elements.Skill(~Vanishthing~); dovanish.execute(self|target); } else { self.textparticle(~No effect!~); } } sfx(~_~ + randstatus.toLowerCase()|~~|0.2);,Oh No!,COUNTDOWN,7,MAGIC,PURPLE,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Smudge,Blind [blind]1 dice,1,inflict(BLIND);,Obfuscate,ODD,,WEAPON,PURPLE,simplify,complicate,,_blind,0,NO,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Snowblot,Inflict [ice]1 freeze,2,inflict(ICE);,Refrigerator,ODD,,ITEM,BRIGHTCYAN,change_power,complicate,,_ice,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Snowblot_upgraded,Inflict [ice]1 freeze|[gray](Reuseable),2,inflict(ICE);,Refrigerator,ODD,,ITEM,BRIGHTCYAN,,,,_ice,-1,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Invisibility Spell,Deal [blind]5 damage|Blind [blind]2 dice,1,attack(5 | BLIND); inflict(BLIND| 2); sfxdamage(target|d); sfx(~_blind~|~~|0.1);,Obfuscate,REQUIRE1,,MAGIC,GRAY,change_power,change_power,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Invisibility Spell_downgraded,Deal [blind]5 damage|Blind [blind]1 dice,1,attack(5 | BLIND); inflict(BLIND| 1); sfxdamage(target|d); sfx(~_blind~|~~|0.1);,Obfuscate,REQUIRE1,,MAGIC,GRAY,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Invisibility Spell_upgraded,Deal [blind]5 damage|Blind [blind]ALL dice,1,attack(5 | BLIND); inflict(BLIND|ALL); sfxdamage(target|d); sfx(~_blind~|~~|0.1);,Obfuscate,REQUIRE1,,MAGIC,GRAY,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Dust Ball,Deal [blind]<d6> damage|Blind [blind]1 dice,1,attack(d|BLIND); inflict(BLIND); sfxdamage(target|d); sfx(~_blind~|~~|0.1);,Obfuscate,ODD,,MAGIC,PURPLE,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Dust Ball_downgraded,Deal [blind]<d6> damage|Blind [blind]2 dice,1,attack(d|BLIND); inflict(BLIND|2); sfxdamage(target|d); sfx(~_blind~|~~|0.1);,Obfuscate,ODD,,MAGIC,PURPLE,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Dust Ball_upgraded,Deal [sword]<d6> damage,1,attack(d); sfxdamage(target|d);,Obfuscate,ODD,,MAGIC,PURPLE,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Blockhead's Blind,Blind all dice,2,inflict(BLIND|ALL);,Blinded with Science,COUNTDOWN,12,MAGIC,GRAY,halfcountdown,change_function,,_blind,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Blockhead's Blind_downgraded,Inflict [vanish]1 vanish,2,if(getstatus(~ncr_vanishall~) < 1 && getstatus(VANISH) < 1 && getstatus(~ncr_vanishlegacy~) < 1) { inflict(~ncr_vanish~); inflict(~ncr_internalvanish~); var dovanish = new elements.Skill(~Vanishthing~); dovanish.execute(self|target); } else { self.textparticle(~No effect!~); },Blinded with Science,COUNTDOWN,12,MAGIC,GRAY,,,,_vanish,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Blockhead's Blind_weakened,Inflict [vanish]1 vanish,2,if(getstatus(~ncr_vanishall~) < 1 && getstatus(VANISH) < 1 && getstatus(~ncr_vanishlegacy~) < 1) { inflict(~ncr_vanish~); inflict(~ncr_internalvanish~); var dovanish = new elements.Skill(~Vanishthing~); dovanish.execute(self|target); } else { self.textparticle(~No effect!~); },Blinded with Science,COUNTDOWN,6,MAGIC,GRAY,,,,_vanish,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Braille Bat,Do [blind]<d6> dmg[;] +[blind]2 blind|([blind]Blind[] yourself at the|start of each turn),1,attack(d|BLIND); inflict(BLIND|2); sfxdamage(target|d); sfx(~_blind~|~~|0.1);,Smog,MAX5|MAX5,,WEAPON,PURPLE,change_power,complicate,,none,0,NO,NO,YES,NO,NO,NO,NO,NO,1,,,inflictself(BLIND); sfx(~_blind~);,e.animate(~flashandshake~);,,,,,,
Braille Bat_upgraded,Do [blind]<d6> dmg[;] +[blind]2 blind|([blind]Blind[] yourself at the|start of each turn),1,attack(d|BLIND); inflict(BLIND|2); sfxdamage(target|d); sfx(~_blind~|~~|0.1);,Smog,NORMAL|NORMAL,,WEAPON,PURPLE,,,,none,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,inflictself(BLIND); sfx(~_blind~);,e.animate(~flashandshake~);,,,,,,
Flare Gun,Inflict [shock] shock[;]|[fire] burn[;] and [blind] blind,1,inflict(SHOCK); inflict(BLIND); inflict(FIRE);,Oh No!,COUNTDOWN,7,MAGIC,YELLOW,change_power,change_power,,_multistatus,0,NO,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Flare Gun_upgraded,Inflict [shock]2 shock[;]|[fire]2 burn[;] [blind]2 blind,1,inflict(SHOCK| 2); inflict(BLIND| 2); inflict(FIRE| 2);,Oh No!,COUNTDOWN,7,MAGIC,YELLOW,,,,_multistatus,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Flare Gun_downgraded,Inflict [shock] shock[;]|[fire] burn[;] or [blind] blind,1,var randstatus = rand([SHOCK|FIRE|BLIND]); inflict(randstatus|1); sfx(~_~ + randstatus.toLowerCase()|~~|0.2);,Oh No!,COUNTDOWN,7,MAGIC,YELLOW,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Sand in Your Face,Inflict [weaken] weaken[;]|[fire] burn[;] and [blind] blind,1,inflict(WEAKEN); inflict(BLIND); inflict(FIRE); sfx(~_fire~); sfx(~_weaken~); sfx(~_blind~);,Oh No!,COUNTDOWN,7,MAGIC,ORANGE,change_power,change_power,,_multistatus,0,NO,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Sand in Your Face_upgraded,Inflict [weaken]2 weaken[;]|[fire]2 burn[;] [blind]2 blind,1,inflict(WEAKEN| 2); inflict(BLIND| 2); inflict(FIRE| 2); sfx(~_fire~); sfx(~_weaken~); sfx(~_blind~);,Oh No!,COUNTDOWN,7,MAGIC,ORANGE,,,,_multistatus,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Sand in Your Face_downgraded,Inflict [weaken] weaken[;]|[fire] burn[;] or [blind] blind,1,var randstatus = rand([WEAKEN|FIRE|BLIND]); inflict(randstatus|1); sfx(~_~ + randstatus.toLowerCase()|~~|0.2);,Oh No!,COUNTDOWN,7,MAGIC,ORANGE,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Inconceivable Terrors,Inflict [shock] shock[;]|[vanish] vanish[;] and [blind] blind,1,inflict(SHOCK); inflict(BLIND); if(getstatus(~ncr_vanishall~) < 1 && getstatus(VANISH) < 1 && getstatus(~ncr_vanishlegacy~) < 1) { inflict(~ncr_vanish~); inflict(~ncr_internalvanish~); var dovanish = new elements.Skill(~Vanishthing~); dovanish.execute(self|target); },Oh No!,COUNTDOWN,7,MAGIC,PINK,change_power,change_power,,_multistatus,0,NO,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Inconceivable Terrors_upgraded,Inflict [shock]2 shock[;]|[vanish]2 vanish[;] [blind]2 blind,1,inflict(SHOCK| 2); inflict(BLIND| 2); if(getstatus(~ncr_vanishall~) < 1 && getstatus(VANISH) < 1 && getstatus(~ncr_vanishlegacy~) < 1) { inflict(~ncr_vanish~|2); inflict(~ncr_internalvanish~|2); var dovanish = new elements.Skill(~Vanishthing~); dovanish.execute(self|target); },Oh No!,COUNTDOWN,7,MAGIC,PINK,,,,_multistatus,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Inconceivable Terrors_downgraded,Inflict [shock] shock[;]|[vanish] vanish[;] or [blind] blind,1,var randstatus = rand([SHOCK|~vanish~|BLIND]); if(randstatus != ~vanish~) { inflict(randstatus|1); } else { if(getstatus(~ncr_vanishall~) < 1 && getstatus(VANISH) < 1 && getstatus(~ncr_vanishlegacy~) < 1) { inflict(~ncr_vanish~); inflict(~ncr_internalvanish~); var dovanish = new elements.Skill(~Vanishthing~); dovanish.execute(self|target); } else { self.textparticle(~No effect!~); } } sfx(~_~ + randstatus.toLowerCase()|~~|0.2);,Oh No!,COUNTDOWN,7,MAGIC,PINK,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Groundbreaking Terrors,Inflict [weaken] weaken[;]|[vanish] vanish[;] and [blind] blind,1,inflict(WEAKEN); inflict(BLIND); if(getstatus(~ncr_vanishall~) < 1 && getstatus(VANISH) < 1 && getstatus(~ncr_vanishlegacy~) < 1) { inflict(~ncr_vanish~); inflict(~ncr_internalvanish~); var dovanish = new elements.Skill(~Vanishthing~); dovanish.execute(self|target); },Oh No!,COUNTDOWN,7,MAGIC,PURPLE,change_power,change_power,,_multistatus,0,NO,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Groundbreaking Terrors_upgraded,Inflict [weaken]2 weaken[;]|[vanish]2 vanish[;] [blind]2 blind,1,inflict(WEAKEN| 2); inflict(BLIND| 2); if(getstatus(~ncr_vanishall~) < 1 && getstatus(VANISH) < 1 && getstatus(~ncr_vanishlegacy~) < 1) { inflict(~ncr_vanish~|2); inflict(~ncr_internalvanish~|2); var dovanish = new elements.Skill(~Vanishthing~); dovanish.execute(self|target); },Oh No!,COUNTDOWN,7,MAGIC,PURPLE,,,,_multistatus,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Groundbreaking Terrors_downgraded,Inflict [weaken] weaken[;]|[vanish] vanish[;] or [blind] blind,1,var randstatus = rand([WEAKEN|~vanish~|BLIND]); if(randstatus != ~vanish~) { inflict(randstatus|1); } else { if(getstatus(~ncr_vanishall~) < 1 && getstatus(VANISH) < 1 && getstatus(~ncr_vanishlegacy~) < 1) { inflict(~ncr_vanish~); inflict(~ncr_internalvanish~); var dovanish = new elements.Skill(~Vanishthing~); dovanish.execute(self|target); } else { self.textparticle(~No effect!~); } } sfx(~_~ + randstatus.toLowerCase()|~~|0.2);,Oh No!,COUNTDOWN,7,MAGIC,PURPLE,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Epilepsy,Do [sword]<d6> damage[;]|[blind]Blind and [shock]Shock,1,attack(d); inflict(BLIND| 1); inflict(SHOCK| 1); sfx(~_shock~|~~|0.1); sfx(~_blind~|~~|0.1); sfxdamage(target|d);,Smog,MAX4,,WEAPON,PURPLE,change_power,change_power,,none,0,NO,NO,YES,NO,NO,NO,NO,NO,1,,,,,,,,,,
Epilepsy_upgraded,Do [sword]<d6> damage[;]|[blind]Blind and [shock]Shock,1,attack(d); inflict(BLIND| 1); inflict(SHOCK| 1); sfx(~_shock~|~~|0.1); sfx(~_blind~|~~|0.1); sfxdamage(target|d);,Smog,NORMAL,,WEAPON,PURPLE,,,,none,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Epilepsy_downgraded,Do [sword]<d6> damage,1,attack(d); sfxdamage(target|d);,Smog,REQUIRE5,,WEAPON,PURPLE,,,,none,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Earthblind,Do [sword]<d6> damage[;]|[blind]Blind and [weaken]Weaken,1,attack(d); inflict(BLIND| 1); inflict(WEAKEN| 1); sfx(~_weaken~|~~|0.1); sfx(~_blind~|~~|0.1); sfxdamage(target|d);,Smog,MAX4,,WEAPON,PURPLE,change_power,change_power,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Earthblind_upgraded,Do [sword]<d6> damage[;]|[blind]Blind and [weaken]Weaken,1,attack(d); inflict(BLIND| 1); inflict(WEAKEN| 1); sfx(~_weaken~|~~|0.1); sfx(~_blind~|~~|0.1); sfxdamage(target|d);,Smog,NORMAL,,WEAPON,PURPLE,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Earthblind_downgraded,Do [sword]<d6> damage,1,attack(d); sfxdamage(target|d);,Smog,REQUIRE5,,WEAPON,PURPLE,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Gunpowder,Do [blind]2 damage[;]|inflict [blind]1 blind,1,attack(2|BLIND); inflict(BLIND); sfxdamage(target|2); sfx(~_blind~|~~|0.1);,Smog,NORMAL,,WEAPON,GRAY,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Gunpowder_upgraded,Do [blind]3 damage[;]|inflict [blind]1 blind,1,attack(3|BLIND); inflict(BLIND); sfxdamage(target|3); sfx(~_blind~|~~|0.1);,Smog,NORMAL,,WEAPON,GRAY,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Gunpowder_downgraded,Do [blind]2 damage,1,attack(2|BLIND); sfxdamage(target|2);,Smog,NORMAL,,WEAPON,GRAY,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Eclipse,Do [blind]3[;] inflict [blind]1 blind|[gray](once per battle),2,attack(3|BLIND); inflict(BLIND); sfxdamage(target|3); sfx(~_blind~|~~|0.1);,Blinded with Science,COUNTDOWN,5,ITEM,GRAY,change_power,change_power,,,0,NO,YES,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Eclipse_upgraded,Do [blind]4[;] inflict [blind]1 blind|[gray](once per battle),2,attack(4|BLIND); inflict(BLIND); sfxdamage(target|4); sfx(~_blind~|~~|0.1);,Blinded with Science,COUNTDOWN,5,ITEM,GRAY,,,,,0,NO,YES,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Eclipse_downgraded,Inflict [blind]1 blind|[gray](once per battle),2,inflict(BLIND); sfx(~_blind~);,Blinded with Science,COUNTDOWN,5,ITEM,GRAY,,,,,0,NO,YES,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Vantablack,Do [blind]<d6> damage[;]|on 4[;] inflict [blind]1 blind,2,attack(d| BLIND); if(d == 4) { inflict(BLIND | 1); sfx(~_blind~|~~|0.1); } sfxdamage(target|d);,Smog,NORMAL,,WEAPON,BLACK,change_power,complicate,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Vantablack_upgraded,Do [blind]<d6> damage[;]|on even[;] inflict [blind]1 blind,2,attack(d| BLIND); if(d % 2 == 0) { inflict(BLIND | 1); sfx(~_blind~|~~|0.1); } sfxdamage(target|d);,Smog,NORMAL,,WEAPON,BLACK,,,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Photographic Blur,Do [blind]<d6> damage[;]|+[blind]3 if enemy is blinded,2,if(getstatus(BLIND) > 0) { attack((d + 3) | BLIND); sfxdamage(target|d + 3); } else { attack((d) | BLIND); sfxdamage(target|d); } sfx(~_blind~|~~|0.1);,Blinded with Science,NORMAL,,WEAPON,PURPLE,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Photographic Blur_upgraded,Do [blind]<d6> damage[;]|double if enemy is blinded,2,if(getstatus(BLIND) > 0) { attack((d * 2) | BLIND); sfxdamage(target|d * 2); } else { attack((d) | BLIND); sfxdamage(target|d); } sfx(~_blind~|~~|0.1);,Blinded with Science,NORMAL,,WEAPON,PURPLE,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Photographic Blur_downgraded,Do [blind]<d6> damage[;]|+[blind]3 if enemy is blinded,2,if(getstatus(BLIND) > 0) { attack((d + 3) | BLIND); sfxdamage(target|d + 3); } else { attack((d) | BLIND); sfxdamage(target|d); } sfx(~_blind~|~~|0.1);,Blinded with Science,MAX3,,WEAPON,PURPLE,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Dark Age,Blind all dice,2,inflict(BLIND | ALL); bonus(1000);,Blinded with Science,REQUIRE1|REQUIRE1,,MAGIC,GRAY,change_power,change_power,,_blind,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Dark Age_upgraded,Blind all dice,2,inflict(BLIND | ALL); bonus(1000);,Blinded with Science,DOUBLES|DOUBLES,,MAGIC,GRAY,,,,_blind,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Dark Age_downgraded,Blind all dice,2,inflict(BLIND | ALL); bonus(1000);,Blinded with Science,REQUIRE1|REQUIRE1|REQUIRE1|REQUIRE1,,MAGIC,GRAY,,,,_blind,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Arctic Water,Inflict [ice]2 freeze,2,inflict(ICE| 2);  bonus(1000);,Refrigerator,COUNTDOWN,5,MAGIC,BRIGHTCYAN,change_power,change_power,,_ice,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Arctic Water_upgraded,Inflict [ice]4 freeze,2,inflict(ICE| 4);  bonus(1000);,Refrigerator,COUNTDOWN,5,MAGIC,BRIGHTCYAN,,,,_ice,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Arctic Water_downgraded,Inflict [ice]1 freeze,2,inflict(ICE);  bonus(1000);,Refrigerator,COUNTDOWN,5,MAGIC,BRIGHTCYAN,,,,_ice,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Invisibility Potion,[blind]8 dmg[;] blind all dice|[gray](once per battle),2,attack(8| BLIND); inflict(BLIND| ALL); sfxdamage(target|8); sfx(~_blind~|~~|0.1);,Obfuscate,COUNTDOWN,8,ITEM,GRAY,threequartercountdown,change_power,,none,0,NO,YES,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Invisibility Potion_downgraded,Do [blind]4 damage|[gray](once per battle),2,attack(4| BLIND); sfxdamage(target|4);,Obfuscate,COUNTDOWN,8,ITEM,GRAY,,,,none,0,NO,YES,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Smoke Breath,Do [blind]4 damage|Inflict [blind]1 blind,2,attack(4| BLIND); inflict(BLIND| 1); sfxdamage(target|4); sfx(~_blind~|~~|0.1);,Blinded with Science,COUNTDOWN,5,WEAPON,GRAY,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Smoke Breath_upgraded,Do [blind]6 damage|Inflict [blind]1 blind,2,attack(6| BLIND); inflict(BLIND| 1); sfxdamage(target|6); sfx(~_blind~|~~|0.1);,Blinded with Science,COUNTDOWN,5,WEAPON,GRAY,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Smoke Breath_downgraded,Do [sword]3 damage,2,attack(3); sfxdamage(target|3);,Blinded with Science,COUNTDOWN,5,WEAPON,GRAY,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Sunglasses at Night,Self inflict [blind]1 blind|(Always offered as scrap)|[70%][gray]''To keep track of the visions in my dice''[],1,,Smog,,,ITEM,GRAY,change_power,change_power,,none,0,NO,NO,YES,NO,NO,NO,YES,NO,,,,inflictself(BLIND|1); sfx(~_blind~);,e.animate(~flashandshake~);,,,,,,
Sunglasses at Night_upgraded,Roll a blind dice|(Always offered as scrap)|[70%][gray]''To keep track of the visions in my dice''[],1,,Smog,,,ITEM,GRAY,,,,none,0,NO,NO,YES,NO,NO,NO,YES,NO,,,,,e.animate(~flashandshake~); givedice(1);,,,,,,
Sunglasses at Night_downgraded,Self inflict [blind]2 blind|(Always offered as scrap)|[70%][gray]''To keep track of the visions in my dice''[],1,,Smog,,,ITEM,GRAY,,,,none,0,NO,NO,YES,NO,NO,NO,YES,NO,,,,inflictself(BLIND|2); sfx(~_blind~);,e.animate(~flashandshake~);,,,,,,
Solid Shade,Do [blind]<d6> damage[;]|Blind [blind]1 dice,1,attack(d| BLIND); inflict(BLIND); sfxdamage(target|d); sfx(~_blind~|~~|0.1);,Obfuscate,ODD,,MAGIC,GRAY,simplify,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Solid Shade_downgraded,Do [blind]<d6> damage[;]|Blind [blind]1 dice,1,attack(d| BLIND); inflict(BLIND); sfxdamage(target|d); sfx(~_blind~|~~|0.1);,Obfuscate,MAX3,,MAGIC,GRAY,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Dark Energy,Do [blind]<d6> damage[;]|Blind [blind]1 dice,1,attack(d| BLIND); inflict(BLIND); sfxdamage(target|d); sfx(~_blind~|~~|0.1);,Blinded with Science,NORMAL|NORMAL,,MAGIC,GRAY,change_power,complicate,,,0,NO,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Dark Energy_upgraded,Do [blind]<d6> damage[;]|Blind [blind]2 dice,1,attack(d| BLIND); inflict(BLIND| 2); sfxdamage(target|d); sfx(~_blind~|~~|0.1);,Blinded with Science,NORMAL|NORMAL,,MAGIC,GRAY,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Shadow Realm,Do [blind]25 damage[;]|blind all dice,1,attack(25| BLIND); inflict(BLIND| ALL); sfxdamage(target|25); sfx(~_blind~|~~|0.1);,Blinded with Science,COUNTDOWN,24,MAGIC,GRAY,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,2,,,,,,,,,,
Shadow Realm_upgraded,Do [blind]30 damage[;]|blind all dice,1,attack(30| BLIND); inflict(BLIND| ALL); sfxdamage(target|30); sfx(~_blind~|~~|0.1);,Blinded with Science,COUNTDOWN,24,MAGIC,GRAY,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Shadow Realm_downgraded,Do [blind]12 damage[;]|blind a dice,1,attack(12 | BLIND); inflict(BLIND| 1); sfxdamage(target|12); sfx(~_blind~|~~|0.1);,Blinded with Science,COUNTDOWN,24,MAGIC,GRAY,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Nightstaff,Do [blind]6 damage|Blind [blind]1 dice,2,attack(6| BLIND); inflict(BLIND| 1); sfxdamage(target|6); sfx(~_blind~|~~|0.1);,Smog,COUNTDOWN,8,WEAPON,PURPLE,reducesize,change_power,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Nightstaff_weakened,Do [blind]3 damage|Blind [blind]1 dice,1,attack(3| BLIND); inflict(BLIND| 1); sfxdamage(target|3); sfx(~_blind~|~~|0.1);,Smog,COUNTDOWN,8,WEAPON,PURPLE,,,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Nightstaff_downgraded,Do [blind]3 damage|Blind [blind]1 dice,2,attack(3| BLIND); inflict(BLIND| 1); sfxdamage(target|3); sfx(~_blind~|~~|0.1);,Smog,COUNTDOWN,8,WEAPON,PURPLE,,,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Wicker Nightstaff,Deal [blind]9 damage|Inflict [blind]2 blind,2,attack(9| BLIND); inflict(BLIND| 2); sfxdamage(target|9); sfx(~_blind~|~~|0.1);,Smog,COUNTDOWN,12,WEAPON,PURPLE,threequartercountdown,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Wicker Nightstaff_weakened,Deal [blind]5 damage|Inflict [blind]1 blind,2,attack(5| BLIND); inflict(BLIND| 1); sfxdamage(target|5); sfx(~_blind~|~~|0.1);,Smog,COUNTDOWN,9,WEAPON,PURPLE,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Wicker Nightstaff_downgraded,Deal [blind]5 damage|Inflict [blind]1 blind,2,attack(5| BLIND); inflict(BLIND| 1); sfxdamage(target|5); sfx(~_blind~|~~|0.1);,Smog,COUNTDOWN,12,WEAPON,PURPLE,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Air Filter,[blind]<timesused> dmg[;] inflict [blind]1 blind|Add +[blind]1 each use,2,attack(e.timesused + 1| BLIND); inflict(BLIND); bonus(1000); sfxdamage(target|e.timesused + 1); sfx(~_blind~|~~|0.1);,Smog,EVEN,,WEAPON,GRAY,change_power,complicate,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Air Filter_upgraded,[blind]<timesused> dmg[;] inflict [blind]2 blind|Add +[blind]1 each use,2,attack(e.timesused + 1| BLIND); inflict(BLIND| 2); bonus(1000); sfxdamage(target|e.timesused + 1); sfx(~_blind~|~~|0.1);,Smog,EVEN,,WEAPON,GRAY,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Optimized Blur,Do [blind]6 damage for|each [blind]1 blind on enemy,2,attack(getstatus(BLIND) * 6 | BLIND); sfxdamage(target|getstatus(BLIND) * 6); sfx(~_blind~|~~|0.1);,Blinded with Science,COUNTDOWN,4,WEAPON,PURPLE,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Optimized Blur_upgraded,Do [blind]7 damage for|each [blind]1 blind on enemy,2,attack(getstatus(BLIND) * 7 | BLIND); sfxdamage(target|getstatus(BLIND) * 7); sfx(~_blind~|~~|0.1);,Blinded with Science,COUNTDOWN,4,WEAPON,PURPLE,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Optimized Blur_downgraded,Do [blind]4 damage for|each [blind]1 blind on enemy,2,attack(getstatus(BLIND) * 4 | BLIND); sfxdamage(target|getstatus(BLIND) * 4); sfx(~_blind~|~~|0.1);,Blinded with Science,COUNTDOWN,4,WEAPON,PURPLE,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Smear,Inflict [blind]1 blind[;]|return both dice,1,inflict(BLIND); givedice([d| d]);,Blinded with Science,DOUBLES|DOUBLES,,WEAPON,PURPLE,change_power,change_power,,_blind,0,NO,NO,YES,NO,NO,NO,NO,NO,1,,,,,,,,,,
Smear_upgraded,Inflict [blind]1 blind[;]|return the dice,1,inflict(BLIND); givedice(d);,Blinded with Science,EVEN,,WEAPON,PURPLE,,,,_blind,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Smear_downgraded,Inflict [blind]1 blind,1,inflict(BLIND);,Blinded with Science,DOUBLES|DOUBLES,,WEAPON,PURPLE,,,,_blind,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Charcoal,Inflict [blind]1 blind|[gray](Reuseable),1,inflict(BLIND);,Smog,EVEN,,WEAPON,GRAY,simplify,removereusable,,_blind,-1,NO,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Cigar,Do [blind]2 damage[;]|inflict [blind]1 blind,1,attack(2| BLIND); inflict(BLIND| 1); sfxdamage(target|2); sfx(~_blind~|~~|0.1); /*you blow smoke in the enemy's face*/,Smog,COUNTDOWN,5,WEAPON,GRAY,change_power,change_power,,,0,NO,NO,YES,NO,NO,NO,NO,NO,1,,,,,,,,,,
Cigar_upgraded,Do [blind]3 damage[;]|inflict [blind]1 blind,1,attack(3| BLIND); inflict(BLIND| 1); sfxdamage(target|3); sfx(~_blind~|~~|0.1);,Smog,COUNTDOWN,5,WEAPON,GRAY,,,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Cigar_downgraded,Do [blind]1 damage[;]|inflict [blind]1 blind,1,attack(1| BLIND); inflict(BLIND| 1); sfxdamage(target|1); sfx(~_blind~|~~|0.1);,Smog,COUNTDOWN,5,WEAPON,GRAY,,,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Lunar Cauldron,Blind [blind]1 dice[;]|roll a blind dice,1,inflict(BLIND); givedice(); self.dicepool[self.dicepool.length - 1].blind = true;,Random Roll,NORMAL,,MAGIC,GRAY,change_power,change_power,,_blind,0,NO,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Lunar Cauldron_upgraded,Blind [blind]1 dice[;] roll a blind dice|[gray](Reuseable),1,inflict(BLIND); givedice(1);,Random Roll,NORMAL,,MAGIC,GRAY,,,,_blind,2,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Lunar Cauldron_downgraded,Blind [blind]1 dice,1,inflict(BLIND);,Random Roll,NORMAL,,MAGIC,GRAY,,,,_blind,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Dark Crystal,Do [blind]<d6> damage[;]|Blind [blind]1 dice,2,attack(d| BLIND); inflict(BLIND); sfxdamage(target|d); sfx(~_blind~|~~|0.1);,Obfuscate,ODD,,MAGIC,GRAY,simplify,complicate,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Smokestack,[blind]4 damage + [blind]1 blind|[gray](Reuseable),1,attack(4| BLIND); inflict(BLIND| 1); sfxdamage(target|4); sfx(~_blind~|~~|0.1);,Smog,COUNTDOWN,8,WEAPON,GRAY,change_power,change_power,,_blind,-1,NO,NO,YES,NO,NO,NO,NO,NO,1,,,,,,,,,,
Smokestack_upgraded,[blind]6 damage + [blind]1 blind|[gray](Reuseable),1,attack(6| BLIND); inflict(BLIND| 1); sfxdamage(target|6); sfx(~_blind~|~~|0.1);,Smog,COUNTDOWN,8,WEAPON,GRAY,,,,_blind,-1,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Smokestack_downgraded,[blind]2 damage + [blind]1 blind|[gray](Reuseable),1,attack(2| BLIND); inflict(BLIND| 1); sfxdamage(target|2); sfx(~_blind~|~~|0.1);,Smog,COUNTDOWN,8,WEAPON,GRAY,,,,_blind,-1,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Just Ice,Do [sword]<d6> damage[;]|freeze all dice,2,attack(d); inflict(ICE| ALL); sfxdamage(target|d);,Time Stop,REQUIRE6,,WEAPON,PINK,,,,_ice,0,YES,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Black Smoke,[blind]<d6> dmg[;] +[blind]2 blind|[gray](once per battle),1,attack(d| BLIND); inflict(BLIND| 2); sfxdamage(target|d); sfx(~_blind~|~~|0.1);,Smog,NORMAL|NORMAL,,WEAPON,GRAY,change_power,complicate,,,0,NO,YES,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Black Smoke_upgraded,[blind]<d6> dmg[;] +[blind]4 blind|[gray](once per battle),2,attack(d| BLIND); inflict(BLIND| 4); sfxdamage(target|d); sfx(~_blind~|~~|0.1);,Smog,NORMAL|NORMAL|NORMAL|NORMAL,,WEAPON,GRAY,,,,,0,NO,YES,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Magic Smog,Do [sword]5 damage|(If [mana]>=2: inflict blind),1,if(getstatusself(MANA) >= 2) { inflict(BLIND | 1); sfx(~_blind~|~~|0.1); } attack(5); sfxdamage(target|5); ,Obfuscate,ODD,,MAGIC,PURPLE,change_power,complicate,,,0,NO,NO,YES,NO,NO,NO,NO,NO,1,,,,,,,,,,
Magic Smog_upgraded,Do [sword]5 damage|(If [mana]>=2: inflict blind),1,if(getstatusself(MANA) >= 2) { inflict(BLIND | 1); sfx(~_blind~|~~|0.1); } attack(5); sfxdamage(target|5); ,Obfuscate,NORMAL,,MAGIC,PURPLE,,,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Soothing Smog,Do [sword]5 damage|(If [heart][]>=50%: inflict blind),1,if(self.hp >= self.maxhp / 2) { inflict(BLIND | 1); sfx(~_blind~|~~|0.1); } attack(5); sfxdamage(target|5);,Obfuscate,ODD,,MAGIC,PURPLE,change_power,complicate,,,0,NO,NO,YES,NO,NO,NO,NO,NO,1,,,,,,,,,,
Soothing Smog_upgraded,Do [sword]5 damage|(If [heart][]>=50%: inflict blind),1,if(self.hp >= self.maxhp / 2) { inflict(BLIND | 1); sfx(~_blind~|~~|0.1); } attack(5); sfxdamage(target|5);,Obfuscate,NORMAL,,MAGIC,PURPLE,,,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Look Out,In 6 turns[;]|do [blind]20 damage,2,jinx(~Look Out~|~take [blind]%VAR% damage~|~Take [blind]%VAR% damage~|~attack(%VAR%| BLIND); sfxdamage(null|%VAR%); sfx(\~_blind\~|\~\~|0.2);~|target|self|6|20); sfx(~_thinghappens~); /*not actually schoolyard-related. oh well*/,Smog,COUNTDOWN,5,ITEM,PURPLE,change_power,change_power,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Look Out_upgraded,In 5 turns[;]|do [blind]20 damage,2,jinx(~Look Out+~|~take [blind]%VAR% damage~|~Take [blind]%VAR% damage~|~attack(%VAR%| BLIND); sfxdamage(null|%VAR%); sfx(\~_blind\~|\~\~|0.2);~|target|self|5|20); sfx(~_thinghappens~);,Smog,COUNTDOWN,5,ITEM,PURPLE,,,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Look Out_downgraded,In 7 turns[;]|do [blind]20 damage,2,jinx(~Look Out-~|~take [blind]%VAR% damage~|~Take [blind]%VAR% damage~|~attack(%VAR%| BLIND); sfxdamage(null|%VAR%); sfx(\~_blind\~|\~\~|0.2);~|target|self|7|20); sfx(~_thinghappens~);,Smog,COUNTDOWN,5,ITEM,PURPLE,,,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
The Chaos,Do [shock]<d6> damage[;]|Shock [shock]6 and confuse,1,attack(d| SHOCK); inflict(SHOCK | 6); inflict(CONFUSE); sfxdamage(target|d); sfx(~_shock~|~~|0.1); sfx(~_confuse~|~~|0.1);,Zap,REQUIRE6|FREE6,,MAGIC,YELLOW,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
The Chaos_upgraded,Do [shock]<d6> damage[;]|Shock [shock]6 and confuse,1,attack(d| SHOCK); inflict(SHOCK | 6); inflict(CONFUSE); sfxdamage(target|d); sfx(~_shock~|~~|0.1); sfx(~_confuse~|~~|0.1);,Zap,REQUIRE6|FREE6,,MAGIC,YELLOW,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
The Chaos_downgraded,Shock [shock]6 and confuse,1,inflict(SHOCK | 6); inflict(CONFUSE); sfx(~_shock~|~~|0.1); sfx(~_confuse~|~~|0.1);,Zap,REQUIRE6,,MAGIC,YELLOW,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
The Disorder,Do [weaken]<d6> damage[;]|Weaken [weaken]6 and confuse,1,attack(d| WEAKEN); inflict(WEAKEN | 6); inflict(CONFUSE); sfx(~_weaken~|~~|0.1); sfxdamage(target|12); sfx(~_confuse~|~~|0.1);,Mumble,REQUIRE6|FREE6,,MAGIC,ORANGE,change_power,change_power,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
The Disorder_upgraded,Do [weaken]<d6> damage[;]|Weaken [weaken]6 and confuse,1,attack(d| WEAKEN); inflict(WEAKEN | 6); inflict(CONFUSE); sfx(~_weaken~|~~|0.1); sfxdamage(target|12); sfx(~_confuse~|~~|0.1);,Mumble,REQUIRE6|FREE6,,MAGIC,ORANGE,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
The Disorder_downgraded,Weaken [weaken]6 and confuse,1,inflict(WEAKEN | 6); inflict(CONFUSE); sfx(~_weaken~|~~|0.1); sfx(~_confuse~|~~|0.1);,Mumble,REQUIRE6,,MAGIC,ORANGE,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Break the Mold,Do [sword]<d6> damage[;]|inflict [silence]Silence,2,attack(d); inflict(SILENCE); sfxdamage(target|d); sfx(~_silence~|~~|0.1);,Dial Up Sounds,ODD,,WEAPON,BRIGHTCYAN,simplify,complicate,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Snide Flattery,Confuse enemy,2,inflict(CONFUSE); bonus(1000);,Stardust,REQUIRE5,,MAGIC,PURPLE,change_requirements,doublerequirements,,_confuse,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Snide Flattery_upgraded,Confuse enemy,2,inflict(CONFUSE); bonus(1000);,Stardust,MIN5,,MAGIC,PURPLE,,,,_confuse,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Sqwauk,Confuse enemy,2,inflict(CONFUSE); bonus(1000);,Stardust,DOUBLES|DOUBLES,,MAGIC,PURPLE,change_power,change_power,,_confuse,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Sqwauk_upgraded,Do [sword]2 damage[;]|and confuse enemy,2,attack(2); inflict(CONFUSE); bonus(1000); sfxdamage(target|2);,Stardust,DOUBLES|DOUBLES,,MAGIC,PURPLE,,,,_confuse,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Sqwauk_downgraded,Confuse enemy,2,inflict(CONFUSE); bonus(1000);,Stardust,REQUIRE6|REQUIRE6,,MAGIC,PURPLE,,,,_confuse,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Just Fire,Do [sword]<d6> damage[;]|burn all dice,2,attack(d); inflict(FIRE| ALL); sfxdamage(target|d);,Time Stop,REQUIRE6,,WEAPON,PINK,,,,_fire,0,YES,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Ghostice,Do [sword]<d6> damage[;]|vanish all dice,2,attack(d); if(simulation) { bonus(400); } else { if(target.isplayer) { inflict(VANISH); } else { inflict(~ncr_vanishall~); inflict(~ncr_internalvanish~|999); if(getstatus(~ncr_vanishall~) > 0) { target.removestatus(~ncr_vanish~|ALL); } var dovanish = new elements.Skill(~Infvanishthing~); dovanish.execute(self|target); } } sfxdamage(target|d);,Time Stop,REQUIRE6,,WEAPON,PINK,,,,_vanish,0,YES,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Fire Splat,Burn [fire]1 dice,2,inflict(FIRE);,Ember,ODD,,ITEM,RED,change_power,complicate,,_fire,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Fire Splat_upgraded,Burn [fire]1 dice|[gray](Reuseable),2,inflict(FIRE);,Ember,ODD,,ITEM,RED,,,,_fire,-1,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Slime Splat,Inflict [vanish]1 vanish,2,if(getstatus(~ncr_vanishall~) < 1 && getstatus(VANISH) < 1 && getstatus(~ncr_vanishlegacy~) < 1) { inflict(~ncr_vanish~); inflict(~ncr_internalvanish~); var dovanish = new elements.Skill(~Vanishthing~); dovanish.execute(self|target); } else { self.textparticle(~No effect!~); },Delude,ODD,,ITEM,PINK,change_power,complicate,,_vanish,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Slime Splat_upgraded,Inflict [vanish]1 vanish|[gray](Reuseable),2,if(getstatus(~ncr_vanishall~) < 1 && getstatus(VANISH) < 1 && getstatus(~ncr_vanishlegacy~) < 1) { inflict(~ncr_vanish~); inflict(~ncr_internalvanish~); var dovanish = new elements.Skill(~Vanishthing~); dovanish.execute(self|target); } else { self.textparticle(~No effect!~); },Delude,ODD,,ITEM,PINK,,,,_vanish,-1,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Geyser,Burn [fire]2 dice,2,inflict(FIRE| 2);  bonus(1000);,Hellfire,COUNTDOWN,5,MAGIC,RED,change_power,change_power,,_fire,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Geyser_upgraded,Burn [fire]4 dice,2,inflict(FIRE| 4);  bonus(1000);,Hellfire,COUNTDOWN,5,MAGIC,RED,,,,_fire,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Geyser_downgraded,Burn [fire]1 dice,2,inflict(FIRE);  bonus(1000);,Hellfire,COUNTDOWN,5,MAGIC,RED,,,,_fire,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Dead Sea,Inflict [vanish]2 vanish,2,if(simulation) { bonus(1000); } else {if(getstatus(~ncr_vanishall~) < 1 && getstatus(VANISH) < 1 && getstatus(~ncr_vanishlegacy~) < 1) { inflict(~ncr_vanish~|2); inflict(~ncr_internalvanish~|2); var dovanish = new elements.Skill(~Vanishthing~); dovanish.execute(self|target); } else { self.textparticle(~No effect!~); } },Strobe Light,COUNTDOWN,5,MAGIC,PINK,change_power,change_power,,_vanish,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Dead Sea_upgraded,Inflict [vanish]4 vanish,2,if(simulation) { bonus(1000); } else {if(getstatus(~ncr_vanishall~) < 1 && getstatus(VANISH) < 1 && getstatus(~ncr_vanishlegacy~) < 1) { inflict(~ncr_vanish~|4); inflict(~ncr_internalvanish~|4); var dovanish = new elements.Skill(~Vanishthing~); dovanish.execute(self|target); } else { self.textparticle(~No effect!~); } },Strobe Light,COUNTDOWN,5,MAGIC,PINK,,,,_vanish,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Dead Sea_downgraded,Inflict [vanish]1 vanish,2,if(simulation) { bonus(1000); } else {if(getstatus(~ncr_vanishall~) < 1 && getstatus(VANISH) < 1 && getstatus(~ncr_vanishlegacy~) < 1) { inflict(~ncr_vanish~|1); inflict(~ncr_internalvanish~|1); var dovanish = new elements.Skill(~Vanishthing~); dovanish.execute(self|target); } else { self.textparticle(~No effect!~); } },Strobe Light,COUNTDOWN,5,MAGIC,PINK,,,,_vanish,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Nitrogen Cocktail,Inflict [poison]3 poison|and [ice]3 freeze,2,inflict(POISON| 3); inflict(ICE| 3); sfx(~_poison~); sfx(~_ice~); /*idk why vampire is having you drink nitrogen but i guess he is.*/,Poison Arrow,COUNTDOWN,15,MAGIC,PURPLE,change_poison,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Nitrogen Cocktail_downgraded,Inflict [poison]3 poison,2,inflict(POISON| 3); sfx(~_poison~);,Poison Arrow,COUNTDOWN,15,MAGIC,PURPLE,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Nitrogen Cocktail_upgraded,Inflict [poison]4 poison|and [ice]4 freeze,2,inflict(POISON| 4); inflict(ICE| 4); sfx(~_poison~); sfx(~_ice~);,Poison Arrow,COUNTDOWN,15,MAGIC,PURPLE,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Carolina Reaper,Inflict [poison]3 poison|and [fire]3 burn,2,inflict(POISON| 3); inflict(FIRE| 3); sfx(~_poison~); sfx(~_fire~); /*vampire is a pepper enthusiast now!*/,Poison Arrow,COUNTDOWN,15,MAGIC,RED,change_poison,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Carolina Reaper_downgraded,Inflict [poison]3 poison,2,inflict(POISON| 3); sfx(~_poison~);,Poison Arrow,COUNTDOWN,15,MAGIC,RED,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Carolina Reaper_upgraded,Inflict [poison]4 poison|and [fire]4 burn,2,inflict(POISON| 4); inflict(FIRE| 4); sfx(~_poison~); sfx(~_fire~);,Poison Arrow,COUNTDOWN,15,MAGIC,RED,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Spiritual Medicine,Inflict [poison]3 poison|and [vanish]3 vanish,2,inflict(POISON| 3); if(simulation) { bonus(200); } else { if(getstatus(~ncr_vanishall~) < 1 && getstatus(VANISH) < 1 && getstatus(~ncr_vanishlegacy~) < 1) { inflict(~ncr_vanish~|3); inflict(~ncr_internalvanish~|3); var dovanish = new elements.Skill(~Vanishthing~); dovanish.execute(self|target); } } sfx(~_poison~); sfx(~_vanish~); /*mystic pseudoscience is a big vanish theme*/,Poison Arrow,COUNTDOWN,15,MAGIC,RED,change_poison,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Spiritual Medicine_downgraded,Inflict [poison]3 poison,2,inflict(POISON| 3); sfx(~_poison~);,Poison Arrow,COUNTDOWN,15,MAGIC,RED,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Spiritual Medicine_upgraded,Inflict [poison]4 poison|and [vanish]4 vanish,2,inflict(POISON| 4); if(simulation) { bonus(200); } else { if(getstatus(~ncr_vanishall~) < 1 && getstatus(VANISH) < 1 && getstatus(~ncr_vanishlegacy~) < 1) { inflict(~ncr_vanish~|4); inflict(~ncr_internalvanish~|4); var dovanish = new elements.Skill(~Vanishthing~); dovanish.execute(self|target); } } sfx(~_poison~); sfx(~_vanish~);,Poison Arrow,COUNTDOWN,15,MAGIC,RED,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Chloroform,Drain [heart]3 health|and inflict [blind]3 blind,2,drain(3); inflict(BLIND| 3); sfx(~_drain~); sfx(~_blind~);,Blood Sip,COUNTDOWN,15,MAGIC,RED,change_poison,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Chloroform_downgraded,Drain [heart]3 health,2,drain(3); sfx(~_drain~);,Blood Sip,COUNTDOWN,15,MAGIC,RED,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Chloroform_upgraded,Drain [heart]4 health|and inflict [blind]4 blind,2,drain(4); inflict(BLIND| 4); sfx(~_drain~); sfx(~_blind~);,Blood Sip,COUNTDOWN,15,MAGIC,RED,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Dry Ice,Drain [heart]3 health|and inflict [ice]3 freeze,2,drain(3); inflict(ICE| 3); sfx(~_drain~); sfx(~_ice~); /*now the vampire is throwing ice at you lmao.*/,Blood Sip,COUNTDOWN,15,MAGIC,BRIGHTCYAN,change_poison,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Dry Ice_downgraded,Drain [heart]3 health,2,drain(3); sfx(~_drain~);,Blood Sip,COUNTDOWN,15,MAGIC,BRIGHTCYAN,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Dry Ice_upgraded,Drain [heart]4 health|and inflict [ice]4 freeze,2,drain(4); inflict(ICE| 4); sfx(~_drain~); sfx(~_ice~);,Blood Sip,COUNTDOWN,15,MAGIC,BRIGHTCYAN,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Fire Fang,Drain [heart]3 health and|inflict [fire]3 burn,2,drain(3); inflict(FIRE|3); sfx(~_drain~); sfx(~_fire~);,Blood Sip,COUNTDOWN,15,MAGIC,RED,change_poison,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Fire Fang_downgraded,Drain [heart]3 health,2,drain(3); sfx(~_drain~);,Blood Sip,COUNTDOWN,15,MAGIC,RED,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Fire Fang_upgraded,Drain [heart]4 health and|inflict [fire]4 burn,2,drain(4); inflict(FIRE|4); sfx(~_drain~); sfx(~_fire~);,Blood Sip,COUNTDOWN,15,MAGIC,RED,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Soul Sucker,Drain [heart]3 health and|inflict [vanish]3 vanish,2,drain(3); if(simulation) { bonus(200); } else { if(getstatus(~ncr_vanishall~) < 1 && getstatus(VANISH) < 1 && getstatus(~ncr_vanishlegacy~) < 1) { inflict(~ncr_vanish~|3); inflict(~ncr_internalvanish~|3); var dovanish = new elements.Skill(~Vanishthing~); dovanish.execute(self|target); } } sfx(~_drain~); sfx(~_vanish~);,Blood Sip,COUNTDOWN,15,MAGIC,PURPLE,change_poison,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Soul Sucker_downgraded,Drain [heart]3 health,2,drain(3); sfx(~_drain~);,Blood Sip,COUNTDOWN,15,MAGIC,PURPLE,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Soul Sucker_upgraded,Drain [heart]4 health and|inflict [vanish]4 vanish,2,drain(4); if(simulation) { bonus(200); } else { if(getstatus(~ncr_vanishall~) < 1 && getstatus(VANISH) < 1 && getstatus(~ncr_vanishlegacy~) < 1) { inflict(~ncr_vanish~|4); inflict(~ncr_internalvanish~|4); var dovanish = new elements.Skill(~Vanishthing~); dovanish.execute(self|target); } } sfx(~_drain~); sfx(~_vanish~);,Blood Sip,COUNTDOWN,15,MAGIC,PURPLE,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Pie a la Mode,Inflict [ice]2 freeze[;]|return the dice,2,givedice(d); inflict(ICE| 2);  bonus(1000);,Refrigerator,ODD,,MAGIC,BRIGHTCYAN,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Pie a la Mode_upgraded,Inflict [ice]4 freeze[;]|return the dice,2,givedice(d); inflict(ICE| 4);  bonus(1000);,Refrigerator,ODD,,MAGIC,BRIGHTCYAN,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Pie a la Mode_downgraded,Inflict [ice]1 freeze[;]|return the dice,2,givedice(d); inflict(ICE| 1);  bonus(1000);,Refrigerator,ODD,,MAGIC,BRIGHTCYAN,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Burnt Pie,Inflict [fire]2 burn[;]|return the dice,2,givedice(d); inflict(FIRE| 2);  bonus(1000);,Ember,ODD,,MAGIC,RED,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Burnt Pie_upgraded,Inflict [fire]4 burn[;]|return the dice,2,givedice(d); inflict(FIRE| 4);  bonus(1000);,Ember,ODD,,MAGIC,RED,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Burnt Pie_downgraded,Inflict [fire]1 burn[;]|return the dice,2,givedice(d); inflict(FIRE| 1);  bonus(1000);,Ember,ODD,,MAGIC,RED,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Pumpkin Pie,Inflict [vanish]2 vanish[;]|return the dice,2,givedice(d); if(simulation) { bonus(1000); } else { if(getstatus(~ncr_vanishall~) < 1 && getstatus(VANISH) < 1 && getstatus(~ncr_vanishlegacy~) < 1) { inflict(~ncr_vanish~|2); inflict(~ncr_internalvanish~|2); var dovanish = new elements.Skill(~Vanishthing~); dovanish.execute(self|target); } },Delude,ODD,,MAGIC,ORANGE,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Pumpkin Pie_upgraded,Inflict [vanish]4 vanish[;]|return the dice,2,givedice(d); if(simulation) { bonus(1000); } else { if(getstatus(~ncr_vanishall~) < 1 && getstatus(VANISH) < 1 && getstatus(~ncr_vanishlegacy~) < 1) { inflict(~ncr_vanish~|4); inflict(~ncr_internalvanish~|4); var dovanish = new elements.Skill(~Vanishthing~); dovanish.execute(self|target); } },Delude,ODD,,MAGIC,ORANGE,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Pumpkin Pie_downgraded,Inflict [vanish]1 vanish[;]|return the dice,2,givedice(d); if(simulation) { bonus(1000); } else { if(getstatus(~ncr_vanishall~) < 1 && getstatus(VANISH) < 1 && getstatus(~ncr_vanishlegacy~) < 1) { inflict(~ncr_vanish~); inflict(~ncr_internalvanish~); var dovanish = new elements.Skill(~Vanishthing~); dovanish.execute(self|target); } },Delude,ODD,,MAGIC,ORANGE,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Chilly Thermometer,Do [sword]5 damage|(If [heart][]>=50%: inflict freeze),1,if(self.hp >= self.maxhp / 2) { inflict(ICE | 1); sfx(~_ice~|~~|0.2); } attack(5); sfxdamage(target|5);,Refrigerator,ODD,,MAGIC,PURPLE,change_power,complicate,,,0,NO,NO,YES,NO,NO,NO,NO,NO,1,,,,,,,,,,
Chilly Thermometer_upgraded,Do [sword]5 damage|(If [heart][]>=50%: inflict freeze),1,if(self.hp >= self.maxhp / 2) { inflict(ICE | 1); sfx(~_ice~|~~|0.2); } attack(5); sfxdamage(target|5);,Refrigerator,NORMAL,,MAGIC,PURPLE,,,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Economic Crisis,Do [sword]5 damage|(If [gold][]>=10: inflict freeze),1,if(self.gold >= 10) { inflict(ICE | 1); sfx(~_ice~|~~|0.2); } attack(5); sfxdamage(target|5);,Refrigerator,ODD,,MAGIC,PURPLE,change_power,complicate,,,0,NO,NO,YES,NO,NO,NO,NO,NO,1,,,,,,,,,,
Economic Crisis_upgraded,Do [sword]5 damage|(If [gold][]>=10: inflict freeze),1,if(self.gold >= 10) { inflict(ICE | 1); sfx(~_ice~|~~|0.2); } attack(5); sfxdamage(target|5);,Refrigerator,NORMAL,,MAGIC,PURPLE,,,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Copyright Lawsuit,Do [sword]5 damage|(If [gold][]>=10: inflict blind),1,if(self.gold >= 10) { inflict(BLIND | 1); sfx(~_blind~|~~|0.2); } attack(5); sfxdamage(target|5);,Obfuscate,ODD,,MAGIC,PURPLE,change_power,complicate,,,0,NO,NO,YES,NO,NO,NO,NO,NO,1,,,,,,,,,,
Copyright Lawsuit_upgraded,Do [sword]5 damage|(If [gold][]>=10: inflict blind),1,if(self.gold >= 10) { inflict(BLIND | 1); sfx(~_blind~|~~|0.2); } attack(5); sfxdamage(target|5);,Obfuscate,NORMAL,,MAGIC,PURPLE,,,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Syringe,Drain [heart]<slotdoubles> health,1,drain(d); sfx(~_drain~);,Emetic,DOUBLES|DOUBLES,,ITEM,RED,change_power,change_function,,,0,NO,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Syringe_downgraded,Do [sword]<slotdoubles> damage,1,attack(d); sfxdamage(target[;]d);,Emetic,DOUBLES|DOUBLES,,ITEM,RED,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Syringe_upgraded,Drain [heart]<d6> health[;]|return a dice,1,var randomslot = rand([0|1]); drain(d); givedice(actualdice[randomslot].basevalue); sfx(~_drain~);,Emetic,MAX3|MAX3,,ITEM,RED,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Bloodshed,Drain equal to half|your missing HP,1,drain(0.5 * (self.maxhp - self.hp));,Blood Sip,COUNTDOWN,24,WEAPON,RED,threequartercountdown,change_power,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Bloodshed_weakened,Drain equal to 25%|your missing HP,1,drain(0.25 * (self.maxhp - self.hp));,Blood Sip,COUNTDOWN,18,WEAPON,RED,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Bloodshed_downgraded,Drain equal to 25%|your missing HP,1,drain(0.25 * (self.maxhp - self.hp));,Blood Sip,COUNTDOWN,24,WEAPON,RED,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Toxic Cauldron,Add [poison]1 poison[;]|get a new dice,1,inflict(POISON); givedice(); sfx(~_poison~);,Random Roll,NORMAL,,MAGIC,PURPLE,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Toxic Cauldron_upgraded,Add [poison]1 poison[;] reroll dice|[gray](Reuseable),1,inflict(POISON); givedice(); sfx(~_poison~);,Random Roll,NORMAL,,MAGIC,PURPLE,,,,,2,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Toxic Cauldron_downgraded,Add [poison]1 poison,1,inflict(POISON); sfx(~_poison~);,Random Roll,NORMAL,,MAGIC,PURPLE,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Contaminate,Inflict [poison]<d6> poison,2,inflict(POISON[;]d); sfx(~_poison~);,Poison Arrow,MAX3,,WEAPON,PURPLE,increaserange,decreaserange,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Fang,Do [sword]<d6> damage[;]|drain [heart]1 health,1,attack(d); drain(1); sfxdamage(target[;]d); sfx(~_drain~|~~|0.2);,Blood Sip,MAX3,,WEAPON,RED,change_requirements,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Fang_downgraded,Do [sword]<d6> damage,1,attack(d); sfxdamage(target[;]d);,Blood Sip,MAX3,,WEAPON,RED,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Fang_upgraded,Do [sword]<d6> damage[;]|drain [heart]1 health,1,attack(d); drain(1); sfxdamage(target[;]d); sfx(~_drain~|~~|0.2);,Blood Sip,MAX5,,WEAPON,RED,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Bloodsplosion,Do [sword]1 damage for every|[heart]1 hp gained this turn,1,var drainfor = self.getvar(~bloodsplosion_gain~); if(drainfor > 0) { drain(drainfor); sfx(~_drain~); } else { self.textparticle(~No effect!~); },Emetic,ODD,,MAGIC,RED,simplify,complicate,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,self.setvar(~bloodsplosion_gain~|0); self.setvar(~bloodsplosion_oldhp~|self.hp); target.setvar(~bloodsplosion_gain~|0); target.setvar(~bloodsplosion_oldhp~|target.hp); /*in case bloodsplosion gets curse?d*/,,,if(self.hp > self.getvar(~bloodsplosion_oldhp~)) { self.setvar(~bloodsplosion_gain~|self.getvar(~bloodsplosion_gain~) + (self.hp - self.getvar(~bloodsplosion_oldhp~))); } self.setvar(~bloodsplosion_oldhp~|self.hp); if(target.hp > target.getvar(~bloodsplosion_oldhp~)) { target.setvar(~bloodsplosion_gain~|target.getvar(~bloodsplosion_gain~) + (target.hp - target.getvar(~bloodsplosion_oldhp~))); } target.setvar(~bloodsplosion_oldhp~|target.hp); /*this doesn't work with gadgets since there's no 'on any gadget use' hook but inventor probably isn't seeing this anyway*/,,,,
Twizzler,Drain [heart]2 health,2,drain(2); sfx(~_drain~);,Blood Sip,COUNTDOWN,2,ITEM,RED,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Twizzler_upgraded,Drain [heart]3 health,2,drain(3); sfx(~_drain~);,Blood Sip,COUNTDOWN,2,ITEM,RED,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Twizzler_downgraded,Drain [heart]1 health,2,drain(1); sfx(~_drain~);,Blood Sip,COUNTDOWN,2,ITEM,RED,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Spider Bite,Add [poison]1 poison,1,inflict(POISON[;]1); sfx(~_poison~);,Poison Arrow,NORMAL,,WEAPON,PURPLE,change_power,complicate,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Spider Bite_upgraded,Add [poison]2 poison,1,inflict(POISON[;]2); sfx(~_poison~);,Poison Arrow,NORMAL,,WEAPON,PURPLE,,,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Sharp Needle,Drain [heart]1 health|[gray](Reuseable),1,drain(1); sfx(~_drain~);,Blood Sip,MAX2,,WEAPON,RED,change_power,change_power,,,3,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Sharp Needle_upgraded,Drain [heart]1 health|[gray](Reuseable),1,drain(1); sfx(~_drain~);,Blood Sip,MAX2,,WEAPON,RED,,,,,5,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Sharp Needle_downgraded,Drain [heart]1 health,1,drain(1); sfx(~_drain~);,Blood Sip,MAX2,,WEAPON,RED,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Needle Gun,Drain [heart]4 health,1,drain(4); sfx(~_drain~); bonus(1000);,Blood Sip,COUNTDOWN,12,WEAPON,RED,change_countdown,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Needle Gun_downgraded,Drain [heart]2 health,1,drain(2); sfx(~_drain~); bonus(1000);,Blood Sip,COUNTDOWN,12,WEAPON,RED,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Needle Gun_upgraded,Drain [heart]4 health,1,drain(4); sfx(~_drain~); bonus(1000);,Blood Sip,COUNTDOWN,9,WEAPON,RED,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Needle Gun_weakened,Drain [heart]2 health,1,drain(2); sfx(~_drain~); bonus(1000);,Blood Sip,COUNTDOWN,9,WEAPON,RED,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Drain Spell,Drain [heart]4 health,1,drain(4); sfx(~_drain~);,Blood Sip,REQUIRE3,,MAGIC,RED,change_power,doublerequirements,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Drain Spell_upgraded,Drain [heart]5 health,1,drain(5); sfx(~_drain~);,Blood Sip,REQUIRE3,,MAGIC,RED,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Bat,Drain [heart]1 health[;]|roll a new dice,1,drain(1); sfx(~_drain~); givedice();,Emetic,COUNTDOWN,5,WEAPON,RED,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Bat_downgraded,Drain [heart]1 health,1,drain(1); sfx(~_drain~);,Emetic,COUNTDOWN,5,WEAPON,RED,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Bat_upgraded,Drain [heart]1 health[;] roll a|dice with value 3 or more,1,drain(1); sfx(~_drain~); givedice(rand([3|4|5|6]));,Emetic,COUNTDOWN,5,WEAPON,RED,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Rosepetal Ritual,Mysterious old ritual|Drain [heart]??? health,2,var p = 0; for(d in actualdice){ if(d.basevalue == 3 # d.basevalue == 5){ p += d.basevalue - 1;} } if(p > 0) { drain(p); sfx(~_drain~); };,Blood Sip,NORMAL|NORMAL,,WEAPON,RED,change_description,complicate,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Rosepetal Ritual_upgraded,Mysterious old ritual|Drain [heart]??? health,2,var p = 4; var d = actualdice[0]; if(d.basevalue == 3 # d.basevalue == 5){ p += d.basevalue - 1;} if(p > 0) { drain(p); sfx(~_drain~); };,Blood Sip,NORMAL|FREE5,,WEAPON,RED,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Draining Gel,Drain [heart]2 health,1,drain(2); sfx(~_drain~);,Emetic,EVEN,,WEAPON,RED,change_power,complicate,,,0,NO,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Draining Gel_upgraded,Drain [heart]3 health,1,drain(3); sfx(~_drain~);,Emetic,EVEN,,WEAPON,RED,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Vita Saw,Do [sword]<d6> damage[;]|on 4[;] drain [heart]2 health,2,attack(d); if(d == 4) { drain(2); sfx(~_drain~|~~|0.2); } sfxdamage(target|d); ,Emetic,MAX4,,WEAPON,RED,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Vita Saw_downgraded,Do [sword]<d6> damage[;]|on 4[;] drain [heart]1 health,2,attack(d); if(d == 4) { drain(1); sfx(~_drain~|~~|0.2); } sfxdamage(target|d); ,Emetic,MAX4,,WEAPON,RED,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Vita Saw_upgraded,Do [sword]<d6> damage[;]|on 6[;] drain [heart]2 health,2,attack(d); if(d == 6) { drain(2); sfx(~_drain~|~~|0.2); } sfxdamage(target|d); ,Emetic,NORMAL,,WEAPON,RED,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Blood Potion,Drain [heart]5 health|[gray](once per battle),2,drain(5); sfx(~_drain~);,Blood Sip,COUNTDOWN,8,ITEM,RED,threequartercountdown,change_power,,,0,NO,YES,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Blood Potion_downgraded,Drain [heart]3 health|[gray](once per battle),2,drain(3); sfx(~_drain~);,Blood Sip,COUNTDOWN,8,ITEM,RED,,,,,0,NO,YES,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Blood Potion_weakened,Drain [heart]3 health|[gray](once per battle),2,drain(3); sfx(~_drain~);,Blood Sip,COUNTDOWN,6,ITEM,RED,,,,,0,NO,YES,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Counter Shriek,For each <d6> the enemy|rolls[;] they get [curse]1 curse,1,if(getstatus(~ncr_cursecounter_~ + d) < 1 && !simulation) { var ccscript = ~var curseon = []; var curseamt = 0; if(self.status.length > 0) {  for(stat in self.status) {   if(stat.type.substr(0|stat.type.length - 1) == \~ncr_cursecounter_\~) {    curseon.push(stat.type.substr(-1|1) - 0); /*string - int = int*/   }  }  if(curseon.length > 0) {   for(mydice in self.dicepool) {    if(curseon.indexOf(mydice.basevalue) >= 0) {     curseamt++;    }   }  }  if(curseamt > 0) {   inflictself(CURSE|curseamt);   /*sfx(\~_curse\~);  screenshake();*/  } }~; if(target.scriptonstartturn.indexOf(ccscript) == -1) { target.scriptonstartturn = ccscript + target.scriptonstartturn; } } inflict(~ncr_cursecounter_~ + d); sfx(~_curse~); target.symbolparticle(~curse~); /*would make this so it detects if target has vanish script in their on start turn script; and if so place ccscript *before* that script; but i am not capable of mentally processing that degree of kludge. here follows my lazy attempt to make a shrug emoticon: v('u')v -ncr*/,Dramatic Pause,NORMAL,,MAGIC,PURPLE,change_power,complicate,,,0,NO,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Counter Shriek_upgraded,For each <d6> the enemy|rolls[;] they get [curse]1 curse|[gray](Reuseable),1,if(getstatus(~ncr_cursecounter_~ + d) < 1 && !simulation) { var ccscript = ~var curseon = []; var curseamt = 0; if(self.status.length > 0) {  for(stat in self.status) {   if(stat.type.substr(0|stat.type.length - 1) == \~ncr_cursecounter_\~) {    curseon.push(stat.type.substr(-1|1) - 0); /*string - int = int*/   }  }  if(curseon.length > 0) {   for(mydice in self.dicepool) {    if(curseon.indexOf(mydice.basevalue) >= 0) {     curseamt++;    }   }  }  if(curseamt > 0) {   inflictself(CURSE|curseamt);   /*sfx(\~_curse\~);  screenshake();*/  } }~; if(target.scriptonstartturn.indexOf(ccscript) == -1) { target.scriptonstartturn = ccscript + target.scriptonstartturn; } } inflict(~ncr_cursecounter_~ + d); sfx(~_curse~); target.symbolparticle(~curse~);,Dramatic Pause,NORMAL,,MAGIC,PURPLE,,,,,2,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Ritual Dagger,Do [sword]<d6> damage[;] curse|enemy when they roll <d6>,1,attack(d); if(getstatus(~ncr_cursecounter_~ + d) < 1 && !simulation) { var ccscript = ~var curseon = []; var curseamt = 0; if(self.status.length > 0) {  for(stat in self.status) {   if(stat.type.substr(0|stat.type.length - 1) == \~ncr_cursecounter_\~) {    curseon.push(stat.type.substr(-1|1) - 0); /*string - int = int*/   }  }  if(curseon.length > 0) {   for(mydice in self.dicepool) {    if(curseon.indexOf(mydice.basevalue) >= 0) {     curseamt++;    }   }  }  if(curseamt > 0) {   inflictself(CURSE|curseamt);   /*sfx(\~_curse\~);  screenshake();*/  } }~; if(target.scriptonstartturn.indexOf(ccscript) == -1) { target.scriptonstartturn = ccscript + target.scriptonstartturn; } } inflict(~ncr_cursecounter_~ + d); sfx(~_curse~); target.symbolparticle(~curse~);,Dramatic Pause,EVEN,,MAGIC,PURPLE,simplify,complicate,,,0,NO,NO,YES,NO,NO,NO,NO,NO,1,,,,,,,,,,
Aurora Borealis,Inflict [shock] shock[;]|[ice] freeze[;] and [blind] blind,1,inflict(SHOCK); inflict(BLIND); inflict(ICE); /*AT *THIS* TIME OF YEAR; AT *THIS* TIME OF DAY; IN *THIS* PART OF THE DUNGEON; LOCALIZED *ENTIRELY* in your remix rule?*/,Oh No!,COUNTDOWN,7,MAGIC,YELLOW,change_power,change_power,,_multistatus,0,NO,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Aurora Borealis_upgraded,Inflict [shock]2 shock[;]|[ice]2 freeze[;] [blind]2 blind,1,inflict(SHOCK| 2); inflict(BLIND| 2); inflict(ICE| 2);,Oh No!,COUNTDOWN,7,MAGIC,YELLOW,,,,_multistatus,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Aurora Borealis_downgraded,Inflict [shock] shock[;]|[ice] freeze[;] or [blind] blind,1,var randstatus = rand([SHOCK|ICE|BLIND]); inflict(randstatus|1); sfx(~_~ + randstatus.toLowerCase()|~~|0.2);,Oh No!,COUNTDOWN,7,MAGIC,YELLOW,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Aurora Australis,Inflict [weaken] weaken[;]|[ice] freeze[;] and [blind] blind,1,inflict(WEAKEN); inflict(BLIND); inflict(ICE); sfx(~_ice~); sfx(~_weaken~); sfx(~_blind~);,Oh No!,COUNTDOWN,7,MAGIC,ORANGE,change_power,change_power,,_multistatus,0,NO,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Aurora Australis_upgraded,Inflict [weaken]2 weaken[;]|[ice]2 freeze[;] [blind]2 blind,1,inflict(WEAKEN| 2); inflict(BLIND| 2); inflict(ICE| 2); sfx(~_ice~); sfx(~_weaken~); sfx(~_blind~);,Oh No!,COUNTDOWN,7,MAGIC,ORANGE,,,,_multistatus,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Aurora Australis_downgraded,Inflict [weaken] weaken[;]|[ice] freeze[;] or [blind] blind,1,var randstatus = rand([WEAKEN|ICE|BLIND]); inflict(randstatus|1); sfx(~_~ + randstatus.toLowerCase()|~~|0.2);,Oh No!,COUNTDOWN,7,MAGIC,ORANGE,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Double Jinx,Halve all jinx countdowns,1,if(self.status.length > 0) { for(mystat in self.status) { if(mystat.type.substr(0|4) == ~jinx~) { var reducejxby = mystat.value / 2; if(reducejxby % 1 != 0) reducejxby -= 0.5; mystat.add(-reducejxby); trace(~done~); } } } if(target.status.length > 0) { for(mystat in target.status) { if(mystat.type.substr(0|4) == ~jinx~) { var reducejxby = mystat.value / 2; if(reducejxby % 1 != 0) reducejxby -= 0.5; mystat.add(-reducejxby); trace(~done~); } } },,NORMAL|NORMAL,,ITEM,PINK,change_power,change_power,,_thinghappens,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Double Jinx_upgraded,Halve all jinx countdowns[;]|return one of the dice,1,givedice(rand([actualdice[0].basevalue|actualdice[1].basevalue])); if(self.status.length > 0) { for(mystat in self.status) { if(mystat.type.substr(0|4) == ~jinx~) { var reducejxby = mystat.value / 2; if(reducejxby % 1 != 0) reducejxby -= 0.5; mystat.add(-reducejxby); trace(~done~); } } } if(target.status.length > 0) { for(mystat in target.status) { if(mystat.type.substr(0|4) == ~jinx~) { var reducejxby = mystat.value / 2; if(reducejxby % 1 != 0) reducejxby -= 0.5; mystat.add(-reducejxby); trace(~done~); } } },,NORMAL|NORMAL,,ITEM,PINK,,,,_thinghappens,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Double Jinx_downgraded,Halve all jinx countdowns,1,if(self.status.length > 0) { for(mystat in self.status) { if(mystat.type.substr(0|4) == ~jinx~) { var reducejxby = mystat.value / 2; if(reducejxby % 1 != 0) reducejxby -= 0.5; mystat.add(-reducejxby); trace(~done~); } } } if(target.status.length > 0) { for(mystat in target.status) { if(mystat.type.substr(0|4) == ~jinx~) { var reducejxby = mystat.value / 2; if(reducejxby % 1 != 0) reducejxby -= 0.5; mystat.add(-reducejxby); trace(~done~); } } },,MIN4|MIN4,,ITEM,PINK,,,,_thinghappens,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Haunted Oven,Inflict [shock] shock[;]|[vanish] vanish[;] and [fire] burn,1,inflict(SHOCK); inflict(FIRE); if(getstatus(~ncr_vanishall~) < 1 && getstatus(VANISH) < 1 && getstatus(~ncr_vanishlegacy~) < 1) { inflict(~ncr_vanish~); inflict(~ncr_internalvanish~); var dovanish = new elements.Skill(~Vanishthing~); dovanish.execute(self|target); },Oh No!,COUNTDOWN,7,MAGIC,PINK,change_power,change_power,,_multistatus,0,NO,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Haunted Oven_upgraded,Inflict [shock]2 shock[;]|[vanish]2 vanish[;] [fire]2 burn,1,inflict(SHOCK| 2); inflict(FIRE| 2); if(getstatus(~ncr_vanishall~) < 1 && getstatus(VANISH) < 1 && getstatus(~ncr_vanishlegacy~) < 1) { inflict(~ncr_vanish~|2); inflict(~ncr_internalvanish~|2); var dovanish = new elements.Skill(~Vanishthing~); dovanish.execute(self|target); },Oh No!,COUNTDOWN,7,MAGIC,PINK,,,,_multistatus,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Haunted Oven_downgraded,Inflict [shock] shock[;]|[vanish] vanish[;] or [fire] burn,1,var randstatus = rand([SHOCK|~vanish~|FIRE]); if(randstatus != ~vanish~) { inflict(randstatus|1); } else { if(getstatus(~ncr_vanishall~) < 1 && getstatus(VANISH) < 1 && getstatus(~ncr_vanishlegacy~) < 1) { inflict(~ncr_vanish~); inflict(~ncr_internalvanish~); var dovanish = new elements.Skill(~Vanishthing~); dovanish.execute(self|target); } else { self.textparticle(~No effect!~); } } sfx(~_~ + randstatus.toLowerCase()|~~|0.2);,Oh No!,COUNTDOWN,7,MAGIC,PINK,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Haunted Bonfire,Inflict [weaken] weaken[;]|[vanish] vanish[;] and [fire] burn,1,inflict(WEAKEN); inflict(FIRE); if(getstatus(~ncr_vanishall~) < 1 && getstatus(VANISH) < 1 && getstatus(~ncr_vanishlegacy~) < 1) { inflict(~ncr_vanish~); inflict(~ncr_internalvanish~); var dovanish = new elements.Skill(~Vanishthing~); dovanish.execute(self|target); },Oh No!,COUNTDOWN,7,MAGIC,PURPLE,change_power,change_power,,_multistatus,0,NO,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Haunted Bonfire_upgraded,Inflict [weaken]2 weaken[;]|[vanish]2 vanish[;] [fire]2 burn,1,inflict(WEAKEN| 2); inflict(FIRE| 2); if(getstatus(~ncr_vanishall~) < 1 && getstatus(VANISH) < 1 && getstatus(~ncr_vanishlegacy~) < 1) { inflict(~ncr_vanish~|2); inflict(~ncr_internalvanish~|2); var dovanish = new elements.Skill(~Vanishthing~); dovanish.execute(self|target); },Oh No!,COUNTDOWN,7,MAGIC,PURPLE,,,,_multistatus,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Haunted Bonfire_downgraded,Inflict [weaken] weaken[;]|[vanish] vanish[;] or [fire] burn,1,var randstatus = rand([WEAKEN|~vanish~|FIRE]); if(randstatus != ~vanish~) { inflict(randstatus|1); } else { if(getstatus(~ncr_vanishall~) < 1 && getstatus(VANISH) < 1 && getstatus(~ncr_vanishlegacy~) < 1) { inflict(~ncr_vanish~); inflict(~ncr_internalvanish~); var dovanish = new elements.Skill(~Vanishthing~); dovanish.execute(self|target); } else { self.textparticle(~No effect!~); } } sfx(~_~ + randstatus.toLowerCase()|~~|0.2);,Oh No!,COUNTDOWN,7,MAGIC,PURPLE,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Lucky Charm,Double the success odds|of chance based items,1,inflictself(~luck~);,,EVEN,,ITEM,GREEN,simplify,complicate,,none,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Wormhole,Do [sword]<d6> damage|In 3 turns[;] return dice,1,attack(d); sfxdamage(target|d); jinx(~Wormhole~|~receive a %VAR%~|~Receive a %VAR%~|~inflict(\~stash\~+%VAR%); sfx(\~_magic\~); ~|self|self|3|d); sfx(~_thinghappens~);,,NORMAL,,WEAPON,YELLOW,change_power,change_power,,none,0,NO,NO,YES,NO,NO,NO,NO,NO,1,,,,,,,,,,
Wormhole_upgraded,Do [sword]<d6> damage|In 2 turns[;] return dice,1,attack(d); sfxdamage(target|d); jinx(~Wormhole+~|~receive a %VAR%~|~Receive a %VAR%~|~inflict(\~stash\~+%VAR%); sfx(\~_magic\~); ~|self|self|2|d); sfx(~_thinghappens~);,,NORMAL,,WEAPON,YELLOW,,,,none,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Wormhole_downgraded,Do [sword]<d6> damage,1,attack(d);,,NORMAL,,WEAPON,YELLOW,,,,none,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Beginner's Luck,If you have [luck]Luck[;]|exchange it for a blessing|Return the dice,1,if(getstatusself(~luck~) > 0 # getstatusself(~luck+~) > 0) { removestatusself(~luck~); removestatusself(~luck+~) var sfxdelay = 0; for(i in 0...0) { var randomstatus = SHIELD; if(getstatusself(FURY) == 0) { randomstatus = rand([SHIELD|FURY|REDUCE|REEQUIPNEXT|DODGE]); } else { randomstatus = rand([SHIELD|REDUCE|REEQUIPNEXT|DODGE]); } var a = 1; if (randomstatus == SHIELD) a = 4; if (randomstatus == REDUCE) a = 2; inflictself(randomstatus | a); sfx(~_~ + randomstatus.toLowerCase()|~~|sfxdelay); sfxdelay += 0.1; } } else { self.textparticle(~No effect!~); } givedice(d);,,NORMAL,,ITEM,GREEN,change_power,change_power,,none,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,donothing();,
Beginner's Luck_upgraded,If you have [luck]Luck[;]|gain a blessing|Return the dice,1,if(getstatusself(~luck~) > 0 # getstatusself(~luck+~) > 0) { var sfxdelay = 0; for(i in 0...0) { var randomstatus = SHIELD; if(getstatusself(FURY) == 0) { randomstatus = rand([SHIELD|FURY|REDUCE|REEQUIPNEXT|DODGE]); } else { randomstatus = rand([SHIELD|REDUCE|REEQUIPNEXT|DODGE]); } var a = 1; if (randomstatus == SHIELD) a = 4; if (randomstatus == REDUCE) a = 2; inflictself(randomstatus | a); sfx(~_~ + randomstatus.toLowerCase()|~~|sfxdelay); sfxdelay += 0.1; } } else { self.textparticle(~No effect!~); } givedice(d);,,NORMAL,,ITEM,GREEN,,,,none,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,donothing();,
Beginner's Luck_downgraded,If you have [luck]Luck[;]|exchange it for a blessing,1,if(getstatusself(~luck~) > 0 # getstatusself(~luck+~) > 0) { removestatusself(~luck~); removestatusself(~luck+~) var sfxdelay = 0; for(i in 0...0) { var randomstatus = SHIELD; if(getstatusself(FURY) == 0) { randomstatus = rand([SHIELD|FURY|REDUCE|REEQUIPNEXT|DODGE]); } else { randomstatus = rand([SHIELD|REDUCE|REEQUIPNEXT|DODGE]); } var a = 1; if (randomstatus == SHIELD) a = 4; if (randomstatus == REDUCE) a = 2; inflictself(randomstatus | a); sfx(~_~ + randomstatus.toLowerCase()|~~|sfxdelay); sfxdelay += 0.1; } } else { self.textparticle(~No effect!~); },,NORMAL,,ITEM,GREEN,,,,none,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,donothing();,
Confused Slapping,(100/<d6>)% chance: [sword]<triple>|Otherwise[;] no effect,1,var odds = (100 / d); if(getstatusself(~luck~) > 0){ odds *= 2; } if(getstatusself(~luck+~) > 0 # odds > 100){ odds = 100; } if(chance(odds)) { self.textparticle(~Success!~); attack(d * 3); sfxdamage(target|d * 3); } else { self.textparticle(~No effect!~); },,MIN3,,WEAPON,RED,change_power,change_power,,none,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Confused Slapping_upgraded,(100/<d6>)% chance: [sword]<triple>|Otherwise[;] no effect,1,var odds = (100 / d); if(getstatusself(~luck~) > 0){ odds *= 2; } if(getstatusself(~luck+~) > 0 # odds > 100){ odds = 100; } if(chance(odds)) { self.textparticle(~Success!~); attack(d * 3); sfxdamage(target|d * 3); } else { self.textparticle(~No effect!~); },,NORMAL,,WEAPON,RED,,,,none,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Confused Slapping_downgraded,(100/<d6>)% chance: [sword]<double>|Otherwise[;] no effect,1,var odds = (100 / d); if(getstatusself(~luck~) > 0){ odds *= 2; } if(getstatusself(~luck+~) > 0 # odds > 100){ odds = 100; } if(chance(odds)) { self.textparticle(~Success!~); attack(d * 2); sfxdamage(target|d * 3); } else { self.textparticle(~No effect!~); },,MIN3,,WEAPON,RED,,,,none,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
EXP Shout,Do [shock]<d6> damage|In [jinx]2 turns[;] inflict [shock]1 shock,1,attack(d| SHOCK); sfx(~_shock~); sfxdamage(target|d); jinx(e.name + e.namemodifier|~get [shock]1 shock~|~Get [shock]1 shock~|~inflict(SHOCK|1); sfx(\~_shock\~); ~|target|self|2|d); sfx(~_thinghappens~);,Zap,MAX5,,WEAPON,YELLOW,change_power,change_power,,none,0,NO,NO,YES,NO,NO,NO,NO,NO,1,,,,,,,,,,
EXP Shout_upgraded,Do [shock]<d6> damage|In [jinx]2 turns[;] inflict [shock]2 shock,1,attack(d| SHOCK); sfx(~_shock~); sfxdamage(target|d); jinx(e.name + e.namemodifier|~get [shock]2 shock~|~Get [shock]2 shock~|~inflict(SHOCK|2); sfx(\~_shock\~); ~|target|self|2|d); sfx(~_thinghappens~);,Zap,MAX5,,WEAPON,YELLOW,,,,none,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
EXP Shout_downgraded,Do [shock]<d6> damage,1,attack(d| SHOCK); sfx(~_shock~); sfxdamage(target|d);,Zap,MAX5,,WEAPON,YELLOW,,,,none,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Bellum Gospel,Do [weaken]<d6> damage|In [jinx]2 turns[;] inflict [weaken]1 weaken,1,attack(d| WEAKEN); sfx(~_weaken~); sfxdamage(target|d); jinx(e.name + e.namemodifier|~get [weaken]1 weaken~|~Get [weaken]1 weaken~|~inflict(WEAKEN|1); sfx(\~_weaken\~); ~|target|self|2|d); sfx(~_thinghappens~);,Mumble,MAX5,,WEAPON,ORANGE,change_power,change_power,,none,0,NO,NO,YES,NO,NO,NO,NO,NO,1,,,,,,,,,,
Bellum Gospel_upgraded,Do [weaken]<d6> damage|In [jinx]2 turns[;] inflict [weaken]2 weaken,1,attack(d| WEAKEN); sfx(~_weaken~); sfxdamage(target|d); jinx(e.name + e.namemodifier|~get [weaken]2 weaken~|~Get [weaken]2 weaken~|~inflict(WEAKEN|2); sfx(\~_weaken\~); ~|target|self|2|d); sfx(~_thinghappens~);,Mumble,MAX5,,WEAPON,ORANGE,,,,none,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Bellum Gospel_downgraded,Do [weaken]<d6> damage,1,attack(d| WEAKEN); sfx(~_weaken~); sfxdamage(target|d);,Mumble,MAX5,,WEAPON,ORANGE,,,,none,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Rusty Guard,In [jinx]<d6>/2 turns: do [sword]<d6>|damage[;] add [shield]<d6> shield,1,jinx(e.name + e.namemodifier|~do [sword]%VAR% damage and get [shield]%VAR% shield~|~Do [sword]%VAR% damage and get [shield]%VAR% shield~|~attackself(%VAR%); sfxdamage(null|%VAR%); inflict(SHIELD|%VAR%); sfx(\~_shield\~|\~\~|0.2);~|self|target|d/2|d); sfx(~_thinghappens~);,,NORMAL,,WEAPON,PURPLE,change_power,change_power,,none,0,NO,NO,YES,NO,NO,NO,NO,NO,1,,,,,,,,,,
Rusty Guard_upgraded,In [jinx]<d6>/2 turns: [sword]<d6>|damage[;] add [shield]<d6> shield,1,jinx(e.name + e.namemodifier|~do [sword]%VAR% damage and get [shield]%VAR% shield~|~Do [sword]%VAR% damage and get [shield]%VAR% shield~|~attackself(%VAR%); sfxdamage(null|%VAR%); inflict(SHIELD|%VAR%); sfx(\~_shield\~|\~\~|0.2);~|self|target|d/2|d); sfx(~_thinghappens~);,,NORMAL|FREE2,,WEAPON,PURPLE,,,,none,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Rusty Guard_downgraded,In [jinx]<d6>/2 turns[;]|gain [shield]<d6> shield,1,jinx(e.name + e.namemodifier|~get [shield]%VAR% shield~|~Get [shield]%VAR% shield~|~inflict(SHIELD|%VAR%); sfx(\~_shield\~);~|self|self|d/2|d); sfx(~_thinghappens~);,,NORMAL,,WEAPON,PURPLE,,,,none,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Play the Music!,Get +1 dice next turn|if the enemy rolls a <d6>,1,inflictself(~dice_trigger_~ + d);,Infinity Mirror,NORMAL,,FINAL,,change_power,complicate,,_magic,0,YES,NO,YES,NO,NO,NO,NO,NO,1,,,,,,,,,,
Play the Music!_upgraded,Get +1 dice next turn|if the enemy rolls either dice,1,inflictself(~dice_trigger_~ + actualdice[0].basevalue); inflictself(~dice_trigger_~ + actualdice[1].basevalue);,Infinity Mirror,NORMAL|NORMAL,,FINAL,,,,,_magic,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Intense Brainstorming,Do [sword]<d6> damage|20% chance to heal [heal]<d6>,2,var odds = 20; if(getstatusself(~luck~) > 0){ odds += 20; } if(getstatusself(~luck+~) > 0){ odds = 100; } attack(d); if(chance(odds)) { self.textparticle(~Success!~); attackself(-d); sfx(~_heal~|~~|0.2); } sfxdamage(target|d); ,,EVEN,,WEAPON,GREEN,simplify,complicate,,none,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Aura Attack,Do [sword]<d6> damage|20% chance to gain [mana]<d6>,2,var odds = 20; if(getstatusself(~luck~) > 0){ odds += 20; } if(getstatusself(~luck+~) > 0){ odds = 100; } attack(d); if(chance(odds)) { self.textparticle(~Success!~); inflictself(MANA|d); sfx(~_mana~|~~|0.2); } sfxdamage(target|d); ,,EVEN,,WEAPON,PURPLE,simplify,complicate,,none,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Wallet Slap,Do [sword]<d6> damage|20% chance to gain [gold]<d6>,2,var odds = 20; if(getstatusself(~luck~) > 0){ odds += 20; } if(getstatusself(~luck+~) > 0){ odds = 100; } attack(d); if(chance(odds)) { self.textparticle(~Success!~); /*if((d / 2) % 1 != 0) { self.gold += (d/2) + 0.5; } else { self.gold += d/2; }*/ self.gold += d; sfx(~pickupgold~|~~|0.2); } sfxdamage(target|d); ,,EVEN,,WEAPON,YELLOW,simplify,complicate,,none,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Communication Line,Do [sword]<d6> damage|20% chance to double,2,var odds = 20; if(getstatusself(~luck~) > 0){ odds += 20; } if(getstatusself(~luck+~) > 0){ odds = 100; } if(chance(odds)) { self.textparticle(~Success!~); attack(d * 2); sfxdamage(target|d * 2); } else { attack(d); sfxdamage(target|d); },Fury,MAX5,,MAGIC,PINK,simplify,complicate,,none,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Grr Grr Grr,33% chance to gain fury|Otherwise[;] no effect,2,var odds = 33; if(getstatusself(~luck~) > 0){ odds += 33; } if(getstatusself(~luck+~) > 0){ odds = 100; } if(chance(odds)) { self.textparticle(~Success!~); inflictself(FURY); sfx(~_fury~); } else { self.textparticle(~No effect!~); },Fury,EVEN,,MAGIC,RED,simplify,complicate,,none,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,donothing();,
Evil Doppelganger,Curse yourself. 33% chance|to gain +1 dice this fight,1,inflictself(CURSE); var odds = 33; if(getstatusself(~luck~) > 0){ odds += 33; } if(getstatusself(~luck+~) > 0 # odds > 100){ odds = 100; } if(chance(odds)) { self.textparticle(~Success!~); self.extradice++; sfx(~magic_gaindice~); },Infinity Mirror,EVEN,,MAGIC,PURPLE,simplify,complicate,,_curse,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Robotic Doppelganger,Lock yourself. 33% chance|to gain +1 dice this fight,1,inflictself(LOCK); var selfdicelist = []; if(self.dicepool.length > 0) for(mydice in self.dicepool) if(mydice.available()) selfdicelist.push(mydice); if(selfdicelist.length > 0) rand(selfdicelist).animate(~lock~); var odds = 33; if(getstatusself(~luck~) > 0){ odds += 33; } if(getstatusself(~luck+~) > 0 # odds > 100){ odds = 100; } if(chance(odds)) { self.textparticle(~Success!~); self.extradice++; sfx(~magic_gaindice~); },Infinity Mirror,EVEN,,MAGIC,PURPLE,simplify,complicate,,_lock,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Freemium Heart,In [jinx]3 turns: do [sword]<d6>|damage[;] and get [fury]Fury,1,jinx(e.name + e.namemodifier|~do [sword]%VAR% damage and gain [fury]Fury~|~Do [sword]%VAR% damage and gain [fury]Fury~|~attackself(%VAR%); sfxdamage(null|%VAR%); inflict(FURY); sfx(\~_fury\~|\~\~|0.2);~|self|target|3|d); sfx(~_thinghappens~);,Fury,MIN4,,MAGIC,PINK,change_power,complicate,,none,0,NO,NO,YES,NO,NO,NO,NO,NO,1,,,,,,,,,,
Freemium Heart_upgraded,Do [sword]<d6> damage. In|[jinx]3 turns[;] get [fury]Fury,1,attack(d); sfxdamage(target|d); jinx(e.name + e.namemodifier|~gain [fury]Fury~|~Gain [fury]Fury~|~inflict(FURY); sfx(\~_fury\~);~|self|self|3|d); sfx(~_thinghappens~);,Fury,MIN4,,MAGIC,PINK,,,,none,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Freemium Hook,In [jinx]3 turns: do [sword]<d6>|damage[;] and get [recycle]Re-Equip,1,jinx(e.name + e.namemodifier|~do [sword]%VAR% damage and gain [recycle]Re-Equip~|~Do [sword]%VAR% damage and gain [recycle]Re-Equip~|~attackself(%VAR%); sfxdamage(null|%VAR%); inflict(REEQUIPNEXT); sfx(\~_recycle\~|\~\~|0.2);~|self|target|3|d); sfx(~_thinghappens~);,Efficiency,MIN2,,MAGIC,PINK,change_power,complicate,,none,0,NO,NO,YES,NO,NO,NO,NO,NO,1,,,,,,,,,,
Freemium Hook_upgraded,Do [sword]<d6> damage. In|[jinx]3 turns[;] get [recycle]Re-Equip,1,attack(d); sfxdamage(target|d); jinx(e.name + e.namemodifier|~get [recycle]Re-Equip~|~Get [recycle]Re-Equip~|~inflict(REEQUIPNEXT); sfx(\~_recycle\~);~|self|self|3|d); sfx(~_thinghappens~);,Efficiency,MIN2,,MAGIC,PINK,,,,none,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Freemium Brain,In [jinx]3 turns: do [sword]<d6>|damage[;] and get [dodge]Dodge,1,jinx(e.name + e.namemodifier|~do [sword]%VAR% damage and gain [dodge]Dodge~|~Do [sword]%VAR% damage and gain [dodge]Dodge~|~attackself(%VAR%); sfxdamage(null|%VAR%); inflict(DODGE); sfx(\~_dodge\~|\~\~|0.2);~|self|target|3|d); sfx(~_thinghappens~);,Efficiency,MIN5,,MAGIC,PINK,change_power,complicate,,none,0,NO,NO,YES,NO,NO,NO,NO,NO,1,,,,,,,,,,
Freemium Brain_upgraded,Do [sword]<d6> damage. In|[jinx]3 turns[;] get [dodge]Dodge,1,attack(d); sfxdamage(target|d); jinx(e.name + e.namemodifier|~get [dodge]Dodge~|~Get [dodge]Dodge~|~inflict(DODGE); sfx(\~_dodge\~);~|self|self|3|d); sfx(~_thinghappens~);,Efficiency,MIN5,,MAGIC,PINK,,,,none,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Mom,33% chance: [fire]<triple> dmg|Otherwise[;] no effect,2,var odds = 33; if(getstatusself(~luck~) > 0){ odds *= 2; } if(getstatusself(~luck+~) > 0){ odds = 100; } if(chance(odds)) { self.textparticle(~Success!~); attack(d * 3|FIRE); sfxdamage(target|d * 3); } else { self.textparticle(~No effect!~); },Heat Ray,ODD,,MAGIC,RED,,,,none,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Mom_upgraded,33% chance: [fire]<triple> dmg|Otherwise[;] roll a burnt dice,2,var odds = 33; if(getstatusself(~luck~) > 0){ odds *= 2; } if(getstatusself(~luck+~) > 0){ odds = 100; } if(chance(odds)) { self.textparticle(~Success!~); attack(d * 3|FIRE); sfxdamage(target|d * 3); } else { inflictself(FIRE); givedice(); },Heat Ray,ODD,,MAGIC,RED,,,,none,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Mom_downgraded,33% chance: [fire]<triple> dmg|Otherwise[;] take [fire]3 dmg,2,var odds = 33; if(getstatusself(~luck~) > 0){ odds *= 2; } if(getstatusself(~luck+~) > 0){ odds = 100; } if(chance(odds)) { self.textparticle(~Success!~); attack(d * 3|FIRE); sfxdamage(target|d * 3); } else { attackself(3|FIRE); },Heat Ray,ODD,,MAGIC,RED,,,,none,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Dad,33% chance: [ice]<triple> dmg|Otherwise[;] no effect,2,var odds = 33; if(getstatusself(~luck~) > 0){ odds *= 2; } if(getstatusself(~luck+~) > 0){ odds = 100; } if(chance(odds)) { self.textparticle(~Success!~); attack(d * 3|ICE); sfxdamage(target|d * 3); } else { self.textparticle(~No effect!~); },Arctic Storm,ODD,,MAGIC,BRIGHTCYAN,,,,none,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Dad_upgraded,33% chance: [ice]<triple> dmg|Otherwise[;] roll a 1,2,var odds = 33; if(getstatusself(~luck~) > 0){ odds *= 2; } if(getstatusself(~luck+~) > 0){ odds = 100; } if(chance(odds)) { self.textparticle(~Success!~); attack(d * 3|ICE); sfxdamage(target|d * 3); } else { givedice(1); },Arctic Storm,ODD,,MAGIC,BRIGHTCYAN,,,,none,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Dad_downgraded,33% chance: [ice]<triple> dmg|Otherwise[;] take [ice]3 dmg,2,var odds = 33; if(getstatusself(~luck~) > 0){ odds *= 2; } if(getstatusself(~luck+~) > 0){ odds = 100; } if(chance(odds)) { self.textparticle(~Success!~); attack(d * 3|ICE); sfxdamage(target|d * 3); } else { attackself(3|ICE); },Arctic Storm,ODD,,MAGIC,BRIGHTCYAN,,,,none,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Kidding,33% chance: [vanish]<triple> dmg|Otherwise[;] no effect,2,var odds = 33; if(getstatusself(~luck~) > 0){ odds *= 2; } if(getstatusself(~luck+~) > 0){ odds = 100; } if(chance(odds)) { self.textparticle(~Success!~); attack(d * 3|VANISH); sfxdamage(target|d * 3); } else { self.textparticle(~No effect!~); },Mass Deception,ODD,,MAGIC,PINK,,,,none,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Kidding_upgraded,33% chance: [vanish]<triple> dmg|Otherwise[;] roll a dice[;] get [vanish]1,2,var odds = 33; if(getstatusself(~luck~) > 0){ odds *= 2; } if(getstatusself(~luck+~) > 0){ odds = 100; } if(chance(odds)) { self.textparticle(~Success!~); attack(d * 3|VANISH); sfxdamage(target|d * 3); } else { if(getstatusself(~ncr_vanishall~) < 1 && getstatusself(VANISH) < 1 && getstatusself(~ncr_vanishlegacy~) < 1) { inflictself(~ncr_vanish~); inflictself(~ncr_internalvanish~); var dovanishself = new elements.Skill(~Vanishselfthing~); dovanishself.execute(self|target); } givedice(); },Mass Deception,ODD,,MAGIC,PINK,,,,none,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Kidding_downgraded,33% chance: [vanish]<triple> dmg|Otherwise[;] take [vanish]3 dmg,2,var odds = 33; if(getstatusself(~luck~) > 0){ odds *= 2; } if(getstatusself(~luck+~) > 0){ odds = 100; } if(chance(odds)) { self.textparticle(~Success!~); attack(d * 3|VANISH); sfxdamage(target|d * 3); } else { self.textparticle(~No effect!~); },Mass Deception,ODD,,MAGIC,PINK,,,,none,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Observe,33% chance: [blind]<triple> dmg|Otherwise[;] no effect,2,var odds = 33; if(getstatusself(~luck~) > 0){ odds *= 2; } if(getstatusself(~luck+~) > 0){ odds = 100; } if(chance(odds)) { self.textparticle(~Success!~); attack(d * 3|BLIND); sfxdamage(target|d * 3); } else { self.textparticle(~No effect!~); },See No Evil,ODD,,MAGIC,GRAY,,,,none,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Observe_upgraded,33% chance: [blind]<triple> dmg|Otherwise[;] roll a blind dice,2,var odds = 33; if(getstatusself(~luck~) > 0){ odds *= 2; } if(getstatusself(~luck+~) > 0){ odds = 100; } if(chance(odds)) { self.textparticle(~Success!~); attack(d * 3|BLIND); sfxdamage(target|d * 3); } else { inflictself(BLIND); givedice(); },See No Evil,ODD,,MAGIC,GRAY,,,,none,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Observe_downgraded,33% chance: [blind]<triple> dmg|Otherwise[;] take [blind]3 dmg,2,var odds = 33; if(getstatusself(~luck~) > 0){ odds *= 2; } if(getstatusself(~luck+~) > 0){ odds = 100; } if(chance(odds)) { self.textparticle(~Success!~); attack(d * 3|BLIND); sfxdamage(target|d * 3); } else { self.textparticle(~No effect!~); },See No Evil,ODD,,MAGIC,GRAY,,,,none,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Rusty Velvet,In [jinx]<d6> turns[;] do [sword]<d6> dmg[;]|gain [thorns]<d6>-1 thorns,1,jinx(e.name + e.namemodifier|~do [sword]%VAR% damage and get [thorns]~ + (d - 1) + ~ thorns~|~Do [sword]%VAR% damage and get [thorns]~ + (d - 1) + ~  thorns~|~attackself(%VAR%); sfxdamage(null|%VAR%); inflict(THORNS|%VAR% - 1); sfx(\~_thorns\~|\~\~|0.2);~|self|target|d|d); sfx(~_thinghappens~);,,MAX3,,WEAPON,GREEN,increaserange,decreaserange,thorns,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Rusty Velvet?,In [jinx]<d6> turns[;] gain [thorns]<d6>-1|thorns[;] do [sword]<d6> dmg,1,jinx(e.name + e.namemodifier|~get [thorns]~ + (d - 1) + ~ thorns and do [sword]%VAR% damage~|~Get [thorns]~ + (d - 1) + ~  thorns and do [sword]%VAR% damage~|~inflict(THORNS|%VAR% - 1); sfx(\~_thorns\~|\~\~|0.2); attackself(%VAR%); sfxdamage(null|%VAR%);~|self|target|d|d); sfx(~_thinghappens~);,,MAX3,,WEAPON,GREEN,increaserange,decreaserange,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Rusty Pike,In [jinx]<d6> turns[;] do [sword]<d6> dmg[;]|gain [reduce]<d6>-1 reduce,1,jinx(e.name + e.namemodifier|~do [sword]%VAR% damage and get [reduce]~ + (d - 1) + ~ reduce~|~Do [sword]%VAR% damage and get [reduce]~ + (d - 1) + ~  reduce~|~attackself(%VAR%); sfxdamage(null|%VAR%); inflict(REDUCE|%VAR% - 1); sfx(\~_reduce\~|\~\~|0.2);~|self|target|d|d); sfx(~_thinghappens~);,,MAX3,,WEAPON,ORANGE,increaserange,decreaserange,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Ching Ching Ching,50% chance to|gain [recycle]1 re-equip,2,var odds = 50; if(getstatusself(~luck~) > 0){ odds += 50; }; if(getstatusself(~luck+~) > 0){ odds = 100; }; if(chance(odds)){ inflictself(REEQUIPNEXT); sfx(~_recycle~); self.textparticle(~Success!~); } else { self.textparticle(~No effect!~); };,,EVEN,,ITEM,GREEN,simplify,complicate,,,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Skip Skip Skip,25% chance to|gain [dodge]1 dodge,2,var odds = 25; if(getstatusself(~luck~) > 0){ odds += 25; }; if(getstatusself(~luck+~) > 0){ odds = 100; }; if(chance(odds)){ inflictself(DODGE); sfx(~_dodge~); self.textparticle(~Success!~); } else { self.textparticle(~No effect!~); };,,EVEN,,ITEM,YELLOW,simplify,complicate,,,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Slip Upkeep@shield,30% chance to double|your [shield]shield,2,var odds = 30; if(getstatusself(~luck~) > 0){ odds += 30; }; if(getstatusself(~luck+~) > 0){ odds = 100; }; if(chance(odds)){ inflictself(SHIELD[;]getstatusself(SHIELD)); sfx(~_shield~); self.textparticle(~Success!~); } else { self.textparticle(~No effect!~); };,,EVEN,,ITEM,ORANGE,simplify,complicate,,,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Slip Upkeep@thorns,30% chance to double|your [thorns]thorns,2,var odds = 30; if(getstatusself(~luck~) > 0){ odds += 30; }; if(getstatusself(~luck+~) > 0){ odds = 100; }; if(chance(odds)){ inflictself(THORNS[;]getstatusself(THORNS)); sfx(~_thorns~); self.textparticle(~Success!~); } else { self.textparticle(~No effect!~); };,,EVEN,,ITEM,GREEN,simplify,complicate,,,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Slip Upkeep@reduce,30% chance to double|your [reduce]reduce,2,var odds = 30; if(getstatusself(~luck~) > 0){ odds += 30; }; if(getstatusself(~luck+~) > 0){ odds = 100; }; if(chance(odds)){ inflictself(REDUCE[;]getstatusself(REDUCE)); sfx(~_shield~); self.textparticle(~Success!~); } else { self.textparticle(~No effect!~); };,,EVEN,,ITEM,ORANGE,simplify,complicate,,,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Antivirus,If you pass the CPU target[;]|decrease CPU by excess,1,inflictself(~cpuprotect~);,,NORMAL,,ITEM,GREEN,,,,_thinghappens,0,YES,NO,YES,YES,NO,NO,NO,NO,,,,,,,,,,,
Redemption,Jackpot immediately|(only available on error),1,robotjackpot(); sfx(~jackpot_autoroll~); /* i was almost going to write this massive 'use a random jackpot effect' downgrade but then i realized you'd never see it because unavailable items can't be weakened! */,,COUNTDOWN,16,ITEM,GRAY,threequarterscountdown,noeffect,,,0,YES,NO,YES,YES,YES,NO,NO,NO,,,,e.availablethisturn = false;,,,if (self.roll_total >= self.roll_target && self.roll_jackpot <= 0 && e.availablethisturn == false) { e.availablethisturn = true; e.animate(~flashandshake~); },,,,
Jackeea Overflows,Do [sword]9 damage[;]|+3 on jackpot|[80%]''Oh god another jackpot item''[],1,if (self.roll_jackpot > 0){ attack(12) sfxdamage(target|12); } else { attack(9); sfxdamage(target|9); },,COUNTDOWN,12,ITEM,YELLOW,change_power,change_power,,,0,NO,NO,YES,YES,NO,NO,NO,NO,,,,,,,,,,,
Jackeea Overflows_upgraded,Do [sword]9 damage[;]|+3 on jackpot|[80%]''Ultima AND countdown upgrade????''[],1,if (self.roll_jackpot > 0){ attack(12) sfxdamage(target|12); } else { attack(9); sfxdamage(target|9); },,COUNTDOWN,9,ITEM,YELLOW,,,,,0,NO,NO,YES,YES,NO,NO,NO,NO,,,,,,,,,,,
Jackeea Overflows_downgraded,Do [sword]9[;] +3 on jackpot|50% chance to fail|[80%]''Chance items... still bad. Phew.''[],1,iff(chance(50) # getstatusself(~luck~) > 0 # getstatusself(~luck+~) > 0) { if (self.roll_jackpot > 0){ attack(12) sfxdamage(target|12); } else { attack(9); sfxdamage(target|9);} } else { self.textparticle(~No effect!~); },,COUNTDOWN,12,ITEM,YELLOW,,,,,0,NO,NO,YES,YES,NO,NO,NO,NO,,,,,,,,,,,
Jackeea Overflows_weakened,Do [sword]9[;] +3 on jackpot|50% chance to fail|[80%]''Chance items... still bad. Phew.''[],1,iff(chance(50) # getstatusself(~luck~) > 0 # getstatusself(~luck+~) > 0) { if (self.roll_jackpot > 0){ attack(12) sfxdamage(target|12); } else { attack(9); sfxdamage(target|9);} } else { self.textparticle(~No effect!~); },,COUNTDOWN,9,ITEM,YELLOW,,,,,0,NO,NO,YES,YES,NO,NO,NO,NO,,,,,,,,,,,
Protective Covering,Make a random card error-|immune[;] but don't mark which,1,var check = self.getvar(~ncr_remove_errim~); if(check != ~blah~) { for(eq in self.equipment) { if(eq.row == check[0] && eq.column == check[1]) { eq.immunetoerrors = false; } } } e.animate(~flashandshake~); var eqlist = []; for(eq in self.equipment) { if(eq.immunetoerrors != true && eq.skillcard == ~~ && eq != e) { eqlist.push(eq); } } if(eqlist != []) { var eq = rand(eqlist); eq.immunetoerrors = true; self.setvar(~ncr_remove_errim~|[eq.row|eq.column]); trace(self.getvar(~ncr_remove_errim~)); } else { self.setvar(~ncr_remove_errim~|~blah~); },,ODD,,ITEM,GRAY,change_power,complicate,,,0,YES,NO,YES,YES,NO,NO,NO,NO,,,,self.setvar(~protective_covering~|~blah~);,,,,,,,
Protective Covering_upgraded,Make a random card error-|immune[;] mark it with a flash,1,var check = self.getvar(~ncr_remove_errim~); if(check != ~blah~) { for(eq in self.equipment) { if(eq.row == check[0] && eq.column == check[1]) { eq.immunetoerrors = false; } } } e.animate(~flashandshake~); var eqlist = []; for(eq in self.equipment) { if(eq.immunetoerrors != true && eq.skillcard == ~~ && eq != e) { eqlist.push(eq); } } if(eqlist != []) { var eq = rand(eqlist); eq.animate(~flashandshake~); eq.immunetoerrors = true; self.setvar(~ncr_remove_errim~|[eq.row|eq.column]); trace(self.getvar(~ncr_remove_errim~)); } else { self.setvar(~ncr_remove_errim~|~blah~); },,ODD,,ITEM,GRAY,,,,,0,YES,NO,YES,YES,NO,NO,NO,NO,,,,self.setvar(~protective_covering~|~blah~);,,,,,,,
Mega Buster,Do [sword]3 damage[;]|double on error|,1,if (self.roll_total >= self.roll_target && self.roll_jackpot <= 0) { attack(6); sfxdamage(target|6); } else { attack(3); sfxdamage(target|3); },,COUNTDOWN,9,WEAPON,GRAY,change_power,change_power,,,-1,NO,NO,NO,YES,YES,NO,NO,NO,,,,,,,,,,,
Mega Buster_upgraded,Do [sword]3 damage[;]|double on error|,1,if (self.roll_total >= self.roll_target && self.roll_jackpot <= 0) { attack(6); sfxdamage(target|6); } else { attack(3); sfxdamage(target|3); },,COUNTDOWN,7,WEAPON,GRAY,,,,,-1,NO,NO,NO,YES,YES,NO,NO,NO,,,,,,,,,,,
Mega Buster_weakened,Do [sword]2 damage[;]|double on error|,1,if (self.roll_total >= self.roll_target && self.roll_jackpot <= 0) { attack(4); sfxdamage(target|4); } else { attack(2); sfxdamage(target|2); },,COUNTDOWN,7,WEAPON,GRAY,,,,,-1,NO,NO,NO,YES,YES,NO,NO,NO,,,,,,,,,,,
Mega Buster_downgraded,Do [sword]2 damage[;]|double on error|,1,if (self.roll_total >= self.roll_target && self.roll_jackpot <= 0) { attack(4); sfxdamage(target|4); } else { attack(2); sfxdamage(target|2); },,COUNTDOWN,9,WEAPON,GRAY,,,,,-1,NO,NO,NO,YES,YES,NO,NO,NO,,,,,,,,,,,
Uninitialized Behavior,Do [sword]4 damage[;] increase|CPU a random amount (1-6)|,1,attack(4); adjustrobotcounter(rand([1|2|3|4|5|6]));,,ODD,,WEAPON,PINK,change_power,change_power,,,-1,NO,NO,NO,YES,YES,NO,NO,NO,,,,,,,,,,,
Uninitialized Behavior_upgraded,Do [sword]4 damage[;] increase|CPU a random amount (1-4)|,1,attack(4); adjustrobotcounter(rand([1|2|3|4]));,,ODD,,WEAPON,PINK,,,,,-1,NO,NO,NO,YES,YES,NO,NO,NO,,,,,,,,,,,
Uninitialized Behavior_downgraded,Do [sword]4 damage[;] increase|CPU a random amount (1-8)|,1,attack(4); adjustrobotcounter(rand([1|2|3|4|5|6|7|8]));,,ODD,,WEAPON,PINK,,,,,-1,NO,NO,NO,YES,YES,NO,NO,NO,,,,,,,,,,,
Crysis,Double CPU,1,adjustrobotcounter(self.roll_total);,,EVEN,,ITEM,GREEN,change_power,change_power,,,0,YES,NO,NO,YES,YES,NO,NO,NO,,,,,,,,,,,
Crysis_upgraded,Double CPU|,1,adjustrobotcounter(self.roll_total);,,EVEN,,ITEM,GREEN,,,,,-1,YES,NO,NO,YES,YES,NO,NO,NO,,,,,,,,,,,
Crysis_downgraded,Quadruple CPU,1,adjustrobotcounter(3 * self.roll_total);,,EVEN,,ITEM,GREEN,,,,,0,YES,NO,NO,YES,YES,NO,NO,NO,,,,,,,,,,,
Memory Stick,Reduce CPU by 2|,1,adjustrobotcounter(-2);,,MIN4,,ITEM,GREEN,change_power,change_power,,,-1,YES,NO,NO,YES,YES,NO,NO,NO,,,,,,,,,,,
Memory Stick_upgraded,Reduce CPU by 3|,1,adjustrobotcounter(-3);,,MIN4,,ITEM,GREEN,,,,,-1,YES,NO,NO,YES,YES,NO,NO,NO,,,,,,,,,,,
Memory Stick_downgraded,Reduce CPU by 1|,1,adjustrobotcounter(-1);,,MIN4,,ITEM,GREEN,,,,,-1,YES,NO,NO,YES,YES,NO,NO,NO,,,,,,,,,,,
